{
    "docs": [
        {
            "location": "/", 
            "text": "OLC Bioinformatics AzureStorage tools\n\n\nThis suite of tools (written in Python) allows you to manipulate containers/files/folders in your Azure storage account.\n\n\nThere are nine scripts in this package:\n\n\n\n\nAzureCredentials\n: store, modify, or delete your Azure connection string into an encrypted file, avoiding storing plain text passwords, environmental variables, and entering the connection string every time you run one of the scripts in the package\n\n\nAzureUpload\n: upload a file or folder to a container in your Azure storage account\n\n\nAzureSAS\n: create SAS (shared access signature) URLs for a file, a folder, or an entire container in your Azure storage account.\n\n\nAzureCopy\n: copy a file, folder, or an entire container within your Azure storage account\n\n\nAzureMove\n: move a file, folder, or an entire container within your Azure storage account\n\n\nAzureDownload\n: download a file, folder, or an entire container from your Azure storage account\n\n\nAzureList\n: list and optionally filter containers and/or files in your Azure storage account\n\n\nAzureTier\n: set the storage tier of a file, folder, or an entire container from your Azure storage account\n\n\nAzureDelete\n: delete a file, folder, or an entire container from your Azure storage account\n\n\nAzureAutomate\n: run upload, sas, move, download, set_tier, and/or delete in batch\n\n\n\n\nFeedback\n\n\nIf you encounter any issues installing or running AzureStorage, have feature requests, or need assistance, please \nopen an issue on GitHub\n, or email me at \nadam.koziol@inspection.gc.ca", 
            "title": "Home"
        }, 
        {
            "location": "/#olc-bioinformatics-azurestorage-tools", 
            "text": "This suite of tools (written in Python) allows you to manipulate containers/files/folders in your Azure storage account.  There are nine scripts in this package:   AzureCredentials : store, modify, or delete your Azure connection string into an encrypted file, avoiding storing plain text passwords, environmental variables, and entering the connection string every time you run one of the scripts in the package  AzureUpload : upload a file or folder to a container in your Azure storage account  AzureSAS : create SAS (shared access signature) URLs for a file, a folder, or an entire container in your Azure storage account.  AzureCopy : copy a file, folder, or an entire container within your Azure storage account  AzureMove : move a file, folder, or an entire container within your Azure storage account  AzureDownload : download a file, folder, or an entire container from your Azure storage account  AzureList : list and optionally filter containers and/or files in your Azure storage account  AzureTier : set the storage tier of a file, folder, or an entire container from your Azure storage account  AzureDelete : delete a file, folder, or an entire container from your Azure storage account  AzureAutomate : run upload, sas, move, download, set_tier, and/or delete in batch   Feedback  If you encounter any issues installing or running AzureStorage, have feature requests, or need assistance, please  open an issue on GitHub , or email me at  adam.koziol@inspection.gc.ca", 
            "title": "OLC Bioinformatics AzureStorage tools"
        }, 
        {
            "location": "/automate/", 
            "text": "AzureAutomate\n\n\nPerform multiple upload, SAS URL creation, move, download, storage tier setting, or delete actions. Alternatively, perform multiple actions in a single call\n\n\nChoose either the \nupload\n, \nsas\n, \nmove\n, \ndownload\n, \ntier\n, \ndelete\n, or \nbatch\n functionality\n\n\nGeneral usage\n\n\nusage: AzureAutomate [-h] {upload,sas,move,download,tier,delete,batch} ...\n\nAutomate the submission of multiple AzureStorage commands\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nAvailable functionality:\n  {upload,sas,move,download,tier,delete,batch}\n    upload              Upload files/folders to Azure storage\n    sas                 Create SAS URLs for containers/files/folders in Azure storage\n    move                Move containers/files/folders in Azure storage\n    download            Download containers/files/folders in Azure storage\n    tier                Set the storage tier of containers/files/folders in Azure storage\n    delete              Delete containers/files/folders in Azure storage\n    batch               Perform multiple different operations in batch\n\n\n\n\nAzureAutomate upload\n\n\nChoose either the \nfile\n or \nfolder\n functionality\n\n\nGeneral usage\n\n\nusage: AzureAutomate upload [-h] {file,folder} ...\n\nUpload files/folders to Azure storage\n\noptional arguments:\n  -h, --help     show this help message and exit\n\nUpload functionality:\n  {file,folder}\n    file         Upload files to Azure storage\n    folder       Upload folders to Azure storage\n\n\n\n\nAzureAutomate upload file\n\n\nAutomate the upload of multiple files to your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nname and path of batch file\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nBatch file format\n\n\nTab-separated file with the following fields:\n\n\ncontainer name, file name, destination path (optional), storage tier (optional)\n\n\nFor additional details on running file uploads, please see the \nAzureUpload file\n section\n\n\nUsage\n\n\nusage: AzureAutomate upload file [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nUpload files to Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, file name, destination path (optional), storage tier (optional)\n\n\n\n\nAzureAutomate upload folder\n\n\nAutomate the upload of multiple folders to your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nname and path of batch file\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nBatch file format\n\n\nTab-separated file with the following fields:\n\n\ncontainer name, folder name, destination path (optional), storage tier (optional)\n\n\nFor additional details on running folder uploads, please see the \nAzureUpload folder\n section\n\n\nUsage\n\n\nusage: AzureAutomate upload folder [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nUpload folders to Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields (one entry per line):\n                         container name, folder name, destination path (optional), storage tier (optional)\n\n\n\n\nAzureAutomate sas\n\n\nChoose either the \ncontainer\n, \nfile\n, or \nfolder\n functionality\n\n\nGeneral usage\n\n\nusage: AzureAutomate sas [-h] {container,file,folder} ...\n\nCreate SAS URLs for containers/files/folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nSAS URL creation functionality:\n  {container,file,folder}\n    container           Create SAS URLs for containers in Azure storage\n    file                Create SAS URLs for files in Azure storage\n    folder              Create SAS URLs for folders in Azure storage\n\n\n\n\nAzureAutomate sas container\n\n\nAutomate the creation of SAS URLs for multiple containers in your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nname and path of batch file\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nBatch file format\n\n\nTab-separated file with the following fields:\n\n\ncontainer name, expiry (optional), output file (optional)\n\n\nFor additional details on creating SAS URLs for containers, please see the \nAzureSAS container\n section\n\n\nUsage\n\n\nusage: AzureAutomate sas container [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nCreate SAS URLs for containers in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                        container name, expiry (optional), output file (optional)\n\n\n\n\nAzureAutomate sas file\n\n\nAutomate the creation of SAS URLs for multiple files in your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nname and path of batch file\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nBatch file format\n\n\nTab-separated file with the following fields:\n\n\ncontainer name, file name and path, expiry (optional), output file (optional)\n\n\nFor additional details on creating SAS URLs for files, please see the \nAzureSAS file\n section\n\n\nUsage\n\n\nusage: AzureAutomate sas file [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nCreate SAS URLs for files in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, file name and path, expiry (optional), output file (optional)\n\n\n\n\nAzureAutomate sas folder\n\n\nAutomate the creation of SAS URLs for multiple folders in your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nname and path of batch file\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nBatch file format\n\n\nTab-separated file with the following fields:\n\n\ncontainer name, folder name and path, expiry (optional), output file (optional)\n\n\nFor additional details on creating SAS URLs for folders, please see the \nAzureSAS folder\n section\n\n\nUsage\n\n\nusage: AzureAutomate sas folder [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nCreate SAS URLs for folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, folder name and path, expiry (optional), output file (optional)\n\n\n\n\nAzureAutomate move\n\n\nChoose either the \ncontainer\n, \nfile\n, or \nfolder\n functionality\n\n\nGeneral usage\n\n\nusage: AzureAutomate move [-h] {container,file,folder} ...\n\nMove containers/files/folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nMove functionality:\n  {container,file,folder}\n    container           Move containers in Azure storage\n    file                Move files in Azure storage\n    folder              Move folders in Azure storage\n\n\n\n\nAzureAutomate move container\n\n\nAutomate the moving of multiple containers in your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nname and path of batch file\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nBatch file format\n\n\nTab-separated file with the following fields:\n\n\ncontainer name, target container, destination path (optional), storage tier (optional)\n\n\nFor additional details on moving containers, please see the \nAzureMove container\n section\n\n\nUsage\n\n\nusage: AzureAutomate move container [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nMove containers in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, target container, destination path (optional), storage tier (optional)\n\n\n\n\nAzureAutomate move file\n\n\nAutomate the moving of multiple files in your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nname and path of batch file\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nBatch file format\n\n\nTab-separated file with the following fields:\n\n\ncontainer name, target container, file name, destination path (optional), storage tier (optional)\n\n\nFor additional details on moving files, please see the \nAzureMove file\n section\n\n\nUsage\n\n\nusage: AzureAutomate move file [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nMove files in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, target container, file name, destination path (optional), storage tier (optional)\n\n\n\n\nAzureAutomate move folder\n\n\nAutomate the moving of multiple folders in your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nname and path of batch file\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nBatch file format\n\n\nTab-separated file with the following fields:\n\n\ncontainer name, target container, folder name, destination path (optional), storage tier (optional)\n\n\nFor additional details on moving folders, please see the \nAzureMove folder\n section\n\n\nUsage\n\n\nusage: AzureAutomate move folder [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nMove folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, target container, folder name, destination path (optional), storage tier (optional)\n\n\n\n\n\nAzureAutomate download\n\n\nChoose either the \ncontainer\n, \nfile\n, or \nfolder\n functionality\n\n\nGeneral usage\n\n\nusage: AzureAutomate download [-h] {container,file,folder} ...\n\nDownload containers/files/folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nDownload functionality:\n  {container,file,folder}\n    container           Download containers from Azure storage\n    file                Download files from Azure storage\n    folder              Download folders from Azure storage\n\n\n\n\nAzureAutomate download container\n\n\nAutomate the downloading of multiple containers from your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nname and path of batch file\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nBatch file format\n\n\nTab-separated file with the following fields:\n\n\ncontainer name, output path (optional)\n\n\nFor additional details on downloading containers, please see the \nAzureDownload container\n section\n\n\nUsage\n\n\nusage: AzureAutomate download container [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nDownload containers from Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, output path (optional)\n\n\n\n\nAzureAutomate download file\n\n\nAutomate the downloading of multiple files from your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nname and path of batch file\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nBatch file format\n\n\nTab-separated file with the following fields:\n\n\ncontainer name, file name, output path (optional)\n\n\nFor additional details on downloading files, please see the \nAzureDownload file\n section\n\n\nUsage\n\n\nusage: AzureAutomate download file [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nDownload files from Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, file name, output path (optional)\n\n\n\n\nAzureAutomate download folder\n\n\nAutomate the downloading of multiple folders from your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nname and path of batch file\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nBatch file format\n\n\nTab-separated file with the following fields:\n\n\ncontainer name, folder name, output path (optional)\n\n\nFor additional details on downloading folders, please see the \nAzureDownload folder\n section\n\n\nUsage\n\n\nusage: AzureAutomate download folder [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nDownload folders from Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, folder name, output path (optional)\n\n\n\n\nAzureAutomate tier\n\n\nChoose either the \ncontainer\n, \nfile\n, or \nfolder\n functionality\n\n\nGeneral usage\n\n\nusage: AzureAutomate tier [-h] {container,file,folder} ...\n\nSet the storage tier of containers/files/folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nStorage tier setting functionality:\n  {container,file,folder}\n    container           Set the storage tier of containers in Azure storage\n    file                Set the storage tier of files in Azure storage\n    folder              Set the storage tier of folders in Azure storage\n\n\n\n\nAzureAutomate tier container\n\n\nAutomate setting the storage tier for multiple containers in your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nname and path of batch file\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nBatch file format\n\n\nTab-separated file with the following fields:\n\n\ncontainer name, storage tier\n\n\nFor additional details on setting the storage tier of containers, please see the \nAzureTier container\n section\n\n\nUsage\n\n\nusage: AzureAutomate tier container [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nSet the storage tier of containers in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, storage tier\n\n\n\n\n\nAzureAutomate tier file\n\n\nAutomate setting the storage tier for multiple files in your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nname and path of batch file\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nBatch file format\n\n\nTab-separated file with the following fields:\n\n\ncontainer name, file name, storage tier\n\n\nFor additional details on setting the storage tier of files, please see the \nAzureTier file\n section\n\n\nUsage\n\n\nusage: AzureAutomate tier file [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nSet the storage tier of files in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, file name, storage tier\n\n\n\n\nAzureAutomate tier folder\n\n\nAutomate setting the storage tier for multiple folders in your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nname and path of batch file\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nBatch file format\n\n\nTab-separated file with the following fields:\n\n\ncontainer name, folder name, storage tier\n\n\nFor additional details on setting the storage tier of folders, please see the \nAzureTier folder\n section\n\n\nUsage\n\n\nusage: AzureAutomate tier folder [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nSet the storage tier of folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, folder name, storage tier\n\n\n\n\nAzureAutomate delete\n\n\nChoose either the \ncontainer\n, \nfile\n, or \nfolder\n functionality\n\n\nGeneral usage\n\n\nusage: AzureAutomate delete [-h] {container,file,folder} ...\n\nDelete containers/files/folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nDelete functionality:\n  {container,file,folder}\n    container           Delete containers in Azure storage\n    file                Delete files in Azure storage\n    folder              Delete folders in Azure storage\n\n\n\n\nAzureAutomate delete container\n\n\nAutomate deleting multiple containers in your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nname and path of batch file\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nBatch file format\n\n\nFile with the following field:\n\n\ncontainer name\n\n\nFor additional details on deleting containers, please see the \nAzureDelete container\n section\n\n\nUsage\n\n\nusage: AzureAutomate delete container [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nDelete containers in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        File with the following field:\n                         container name\n\n\n\n\nAzureAutomate delete file\n\n\nAutomate deleting multiple files in your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nname and path of batch file\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nBatch file format\n\n\nTab-separated file with the following fields:\n\n\ncontainer name, file name, retention time (optional)\n\n\nFor additional details on deleting files, please see the \nAzureDelete file\n section\n\n\nUsage\n\n\nusage: AzureAutomate delete file [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nDelete files in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, file name, retention time (optional)\n\n\n\n\n\nAzureAutomate delete folder\n\n\nAutomate deleting multiple folders in your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nname and path of batch file\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nBatch file format\n\n\nTab-separated file with the following fields:\n\n\ncontainer name, folder name, retention time (optional)\n\n\nFor additional details on deleting folders, please see the \nAzureDelete folder\n section\n\n\nUsage\n\n\nusage: AzureAutomate delete folder [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nDelete folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, folder name, retention time (optional)\n\n\n\n\nAzureAutomate batch\n\n\nAutomate multiple operations\n\n\nBatch file format\n\n\nTab-separated file in the following format:\n\n\ncommand, sub-command, command:subcommand-specific arguments\n\n\nPlease review the \nAzureAutomate\n documentation for all the possible operations\n\n\nUsage\n\n\nusage: AzureAutomate batch [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nPerform multiple different operations in batch\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file in the following format:\n                        command, sub-command, arguments\n\n                        Below is the complete list of functionalities:\n                        upload, file, container name, file name, destination path (optional), storage tier (optional)\n                        upload, folder, container name, folder name, destination path (optional), storage tier (optional)\n                        sas, container, container name, expiry (optional), output file (optional)\n                        sas, file, container name, file name and path, expiry (optional), output file (optional)\n                        sas, folder, container name, folder name and path, expiry (optional), output file (optional)\n                        move, container, container name, target container, destination path (optional), storage tier (optional)\n                        move, file, container name, target container, file name, destination path (optional), storage tier (optional)\n                        move, folder, container name, target container, folder name, destination path (optional), storage tier (optional)\n                        download, container, container name, output path (optional)\n                        download, file, container name, file name, output path (optional)\n                        download, folder, container name, folder name, output path (optional)\n                        tier, container, container name, storage tier\n                        tier, file, container name, file name, storage tier\n                        tier, folder, container name, folder name, storage tier\n                        delete, container, container name\n                        delete, file, container name, file name, retention time (optional)\n                        delete, folder, container name, folder name, retention time (optional)", 
            "title": "Automate"
        }, 
        {
            "location": "/automate/#azureautomate", 
            "text": "Perform multiple upload, SAS URL creation, move, download, storage tier setting, or delete actions. Alternatively, perform multiple actions in a single call  Choose either the  upload ,  sas ,  move ,  download ,  tier ,  delete , or  batch  functionality  General usage  usage: AzureAutomate [-h] {upload,sas,move,download,tier,delete,batch} ...\n\nAutomate the submission of multiple AzureStorage commands\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nAvailable functionality:\n  {upload,sas,move,download,tier,delete,batch}\n    upload              Upload files/folders to Azure storage\n    sas                 Create SAS URLs for containers/files/folders in Azure storage\n    move                Move containers/files/folders in Azure storage\n    download            Download containers/files/folders in Azure storage\n    tier                Set the storage tier of containers/files/folders in Azure storage\n    delete              Delete containers/files/folders in Azure storage\n    batch               Perform multiple different operations in batch  AzureAutomate upload  Choose either the  file  or  folder  functionality  General usage  usage: AzureAutomate upload [-h] {file,folder} ...\n\nUpload files/folders to Azure storage\n\noptional arguments:\n  -h, --help     show this help message and exit\n\nUpload functionality:\n  {file,folder}\n    file         Upload files to Azure storage\n    folder       Upload folders to Azure storage  AzureAutomate upload file  Automate the upload of multiple files to your Azure storage account  Required arguments:   container name  account name  name and path of batch file   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Batch file format  Tab-separated file with the following fields:  container name, file name, destination path (optional), storage tier (optional)  For additional details on running file uploads, please see the  AzureUpload file  section  Usage  usage: AzureAutomate upload file [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nUpload files to Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, file name, destination path (optional), storage tier (optional)  AzureAutomate upload folder  Automate the upload of multiple folders to your Azure storage account  Required arguments:   container name  account name  name and path of batch file   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Batch file format  Tab-separated file with the following fields:  container name, folder name, destination path (optional), storage tier (optional)  For additional details on running folder uploads, please see the  AzureUpload folder  section  Usage  usage: AzureAutomate upload folder [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nUpload folders to Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields (one entry per line):\n                         container name, folder name, destination path (optional), storage tier (optional)  AzureAutomate sas  Choose either the  container ,  file , or  folder  functionality  General usage  usage: AzureAutomate sas [-h] {container,file,folder} ...\n\nCreate SAS URLs for containers/files/folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nSAS URL creation functionality:\n  {container,file,folder}\n    container           Create SAS URLs for containers in Azure storage\n    file                Create SAS URLs for files in Azure storage\n    folder              Create SAS URLs for folders in Azure storage  AzureAutomate sas container  Automate the creation of SAS URLs for multiple containers in your Azure storage account  Required arguments:   container name  account name  name and path of batch file   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Batch file format  Tab-separated file with the following fields:  container name, expiry (optional), output file (optional)  For additional details on creating SAS URLs for containers, please see the  AzureSAS container  section  Usage  usage: AzureAutomate sas container [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nCreate SAS URLs for containers in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                        container name, expiry (optional), output file (optional)  AzureAutomate sas file  Automate the creation of SAS URLs for multiple files in your Azure storage account  Required arguments:   container name  account name  name and path of batch file   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Batch file format  Tab-separated file with the following fields:  container name, file name and path, expiry (optional), output file (optional)  For additional details on creating SAS URLs for files, please see the  AzureSAS file  section  Usage  usage: AzureAutomate sas file [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nCreate SAS URLs for files in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, file name and path, expiry (optional), output file (optional)  AzureAutomate sas folder  Automate the creation of SAS URLs for multiple folders in your Azure storage account  Required arguments:   container name  account name  name and path of batch file   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Batch file format  Tab-separated file with the following fields:  container name, folder name and path, expiry (optional), output file (optional)  For additional details on creating SAS URLs for folders, please see the  AzureSAS folder  section  Usage  usage: AzureAutomate sas folder [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nCreate SAS URLs for folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, folder name and path, expiry (optional), output file (optional)  AzureAutomate move  Choose either the  container ,  file , or  folder  functionality  General usage  usage: AzureAutomate move [-h] {container,file,folder} ...\n\nMove containers/files/folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nMove functionality:\n  {container,file,folder}\n    container           Move containers in Azure storage\n    file                Move files in Azure storage\n    folder              Move folders in Azure storage  AzureAutomate move container  Automate the moving of multiple containers in your Azure storage account  Required arguments:   container name  account name  name and path of batch file   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Batch file format  Tab-separated file with the following fields:  container name, target container, destination path (optional), storage tier (optional)  For additional details on moving containers, please see the  AzureMove container  section  Usage  usage: AzureAutomate move container [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nMove containers in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, target container, destination path (optional), storage tier (optional)  AzureAutomate move file  Automate the moving of multiple files in your Azure storage account  Required arguments:   container name  account name  name and path of batch file   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Batch file format  Tab-separated file with the following fields:  container name, target container, file name, destination path (optional), storage tier (optional)  For additional details on moving files, please see the  AzureMove file  section  Usage  usage: AzureAutomate move file [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nMove files in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, target container, file name, destination path (optional), storage tier (optional)  AzureAutomate move folder  Automate the moving of multiple folders in your Azure storage account  Required arguments:   container name  account name  name and path of batch file   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Batch file format  Tab-separated file with the following fields:  container name, target container, folder name, destination path (optional), storage tier (optional)  For additional details on moving folders, please see the  AzureMove folder  section  Usage  usage: AzureAutomate move folder [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nMove folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, target container, folder name, destination path (optional), storage tier (optional)  AzureAutomate download  Choose either the  container ,  file , or  folder  functionality  General usage  usage: AzureAutomate download [-h] {container,file,folder} ...\n\nDownload containers/files/folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nDownload functionality:\n  {container,file,folder}\n    container           Download containers from Azure storage\n    file                Download files from Azure storage\n    folder              Download folders from Azure storage  AzureAutomate download container  Automate the downloading of multiple containers from your Azure storage account  Required arguments:   container name  account name  name and path of batch file   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Batch file format  Tab-separated file with the following fields:  container name, output path (optional)  For additional details on downloading containers, please see the  AzureDownload container  section  Usage  usage: AzureAutomate download container [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nDownload containers from Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, output path (optional)  AzureAutomate download file  Automate the downloading of multiple files from your Azure storage account  Required arguments:   container name  account name  name and path of batch file   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Batch file format  Tab-separated file with the following fields:  container name, file name, output path (optional)  For additional details on downloading files, please see the  AzureDownload file  section  Usage  usage: AzureAutomate download file [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nDownload files from Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, file name, output path (optional)  AzureAutomate download folder  Automate the downloading of multiple folders from your Azure storage account  Required arguments:   container name  account name  name and path of batch file   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Batch file format  Tab-separated file with the following fields:  container name, folder name, output path (optional)  For additional details on downloading folders, please see the  AzureDownload folder  section  Usage  usage: AzureAutomate download folder [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nDownload folders from Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, folder name, output path (optional)  AzureAutomate tier  Choose either the  container ,  file , or  folder  functionality  General usage  usage: AzureAutomate tier [-h] {container,file,folder} ...\n\nSet the storage tier of containers/files/folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nStorage tier setting functionality:\n  {container,file,folder}\n    container           Set the storage tier of containers in Azure storage\n    file                Set the storage tier of files in Azure storage\n    folder              Set the storage tier of folders in Azure storage  AzureAutomate tier container  Automate setting the storage tier for multiple containers in your Azure storage account  Required arguments:   container name  account name  name and path of batch file   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Batch file format  Tab-separated file with the following fields:  container name, storage tier  For additional details on setting the storage tier of containers, please see the  AzureTier container  section  Usage  usage: AzureAutomate tier container [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nSet the storage tier of containers in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, storage tier  AzureAutomate tier file  Automate setting the storage tier for multiple files in your Azure storage account  Required arguments:   container name  account name  name and path of batch file   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Batch file format  Tab-separated file with the following fields:  container name, file name, storage tier  For additional details on setting the storage tier of files, please see the  AzureTier file  section  Usage  usage: AzureAutomate tier file [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nSet the storage tier of files in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, file name, storage tier  AzureAutomate tier folder  Automate setting the storage tier for multiple folders in your Azure storage account  Required arguments:   container name  account name  name and path of batch file   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Batch file format  Tab-separated file with the following fields:  container name, folder name, storage tier  For additional details on setting the storage tier of folders, please see the  AzureTier folder  section  Usage  usage: AzureAutomate tier folder [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nSet the storage tier of folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, folder name, storage tier  AzureAutomate delete  Choose either the  container ,  file , or  folder  functionality  General usage  usage: AzureAutomate delete [-h] {container,file,folder} ...\n\nDelete containers/files/folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nDelete functionality:\n  {container,file,folder}\n    container           Delete containers in Azure storage\n    file                Delete files in Azure storage\n    folder              Delete folders in Azure storage  AzureAutomate delete container  Automate deleting multiple containers in your Azure storage account  Required arguments:   container name  account name  name and path of batch file   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Batch file format  File with the following field:  container name  For additional details on deleting containers, please see the  AzureDelete container  section  Usage  usage: AzureAutomate delete container [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nDelete containers in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        File with the following field:\n                         container name  AzureAutomate delete file  Automate deleting multiple files in your Azure storage account  Required arguments:   container name  account name  name and path of batch file   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Batch file format  Tab-separated file with the following fields:  container name, file name, retention time (optional)  For additional details on deleting files, please see the  AzureDelete file  section  Usage  usage: AzureAutomate delete file [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nDelete files in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, file name, retention time (optional)  AzureAutomate delete folder  Automate deleting multiple folders in your Azure storage account  Required arguments:   container name  account name  name and path of batch file   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Batch file format  Tab-separated file with the following fields:  container name, folder name, retention time (optional)  For additional details on deleting folders, please see the  AzureDelete folder  section  Usage  usage: AzureAutomate delete folder [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nDelete folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file with the following fields:\n                         container name, folder name, retention time (optional)  AzureAutomate batch  Automate multiple operations  Batch file format  Tab-separated file in the following format:  command, sub-command, command:subcommand-specific arguments  Please review the  AzureAutomate  documentation for all the possible operations  Usage  usage: AzureAutomate batch [-h] -a ACCOUNT_NAME [-v VERBOSITY] -b BATCH_FILE\n\nPerform multiple different operations in batch\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -b BATCH_FILE, --batch_file BATCH_FILE\n                        Tab-separated file in the following format:\n                        command, sub-command, arguments\n\n                        Below is the complete list of functionalities:\n                        upload, file, container name, file name, destination path (optional), storage tier (optional)\n                        upload, folder, container name, folder name, destination path (optional), storage tier (optional)\n                        sas, container, container name, expiry (optional), output file (optional)\n                        sas, file, container name, file name and path, expiry (optional), output file (optional)\n                        sas, folder, container name, folder name and path, expiry (optional), output file (optional)\n                        move, container, container name, target container, destination path (optional), storage tier (optional)\n                        move, file, container name, target container, file name, destination path (optional), storage tier (optional)\n                        move, folder, container name, target container, folder name, destination path (optional), storage tier (optional)\n                        download, container, container name, output path (optional)\n                        download, file, container name, file name, output path (optional)\n                        download, folder, container name, folder name, output path (optional)\n                        tier, container, container name, storage tier\n                        tier, file, container name, file name, storage tier\n                        tier, folder, container name, folder name, storage tier\n                        delete, container, container name\n                        delete, file, container name, file name, retention time (optional)\n                        delete, folder, container name, folder name, retention time (optional)", 
            "title": "AzureAutomate"
        }, 
        {
            "location": "/copy/", 
            "text": "AzureCopy\n\n\nCopy containers, files, or folders within your Azure storage account.\n\n\nChoose either the \ncontainer\n, \nfile\n, or  \nfolder\n functionality\n\n\nGeneral usage\n\n\nusage: AzureCopy [-h] {container,file,folder} ...\n\nCopy containers, files, or folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nAvailable functionality:\n  {container,file,folder}\n    container           Copy a container in Azure storage\n    file                Copy a file within Azure storage \n    folder              Copy a folder within Azure storage\n\n\n\n\n\nAzureCopy container\n\n\nCopy a container within your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\n\n\nOptional arguments:\n\n\n\n\ntarget container: name of the container into which the container is to be copied\n\n\npath to store the container: nest the container within the target container\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\nstorage tier: set the storage tier of the file in Azure storage. Options are Hot, Cool, Archive. Default is Hot\n\n\n\n\nExample commands:\n\n\nThese commands will use \ncontainer-name\n as the name of the container, \ntarget-container\n as the name of the target container, and \naccount_name\n as the name of the storage account\n\n\nTo perform a basic copy:\n\n\nAzureCopy container -a account_name -c container-name -t target-container\n\n\nTo copy a container, and set the storage tier to \nCool\n\n\nAzureCopy container -a account_name -c container-name -t target-container -s Cool\n\n\nTo copy a container and nest it into folder \noutputs\n:\n\n\nAzureCopy container -a account_name -c container-name -t target-container -r outputs\n\n\nUsage\n\n\nusage: AzureCopy container [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] -t TARGET_CONTAINER [-r RESET_PATH]\n                           [-s STORAGE_TIER]\n\nCopy a container in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -t TARGET_CONTAINER, --target_container TARGET_CONTAINER\n                        The target container to which the container/file/folder is to be copyd (this can be the same as the container_name if you want to copy a file/folder within a container\n  -r RESET_PATH, --reset_path RESET_PATH\n                        Set the path of the container/file/folder within a folder in the target container e.g. sequence_data/220202-m05722. If you want to place it directly in the container without any nesting, use or ''\n  -s STORAGE_TIER, --storage_tier STORAGE_TIER\n                        Set the storage tier for the container/file/folder to be copyd. Options are \nHot\n, \nCool\n, and \nArchive\n. Default is Hot\n\n\n\n\nAzureCopy file\n\n\nCopy a file within your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nfile name\n\n\n\n\nOptional arguments:\n\n\n\n\ntarget container: name of the container into which the container is to be copied (can be the same as \ncontainer name\n)\n\n\npath to store the container: nest the container within the target container\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\nstorage tier: set the storage tier of the file in Azure storage. Options are Hot, Cool, Archive. Default is Hot\n\n\nname: set the name of the copied file\n\n\n\n\nExample commands:\n\n\nThese commands will use \ncontainer-name\n as the name of the container, \ntarget-container\n as the name of the target container, and \naccount_name\n as the name of the storage account\n\n\nTo copy the file \nfile_name.gz\n\n\nAzureCopy file -a account_name -c container-name -t target-container -f file_name.gz\n\n\nTo copy the file \nfile_name.gz\n and rename it \ncopy.gz\n\n\nAzureCopy file -a account_name -c container-name -t target-container -f file_name.gz -n copy.gz\n\n\nTo copy the file \nfile_name.gz\n, and set the storage tier to \nCool\n\n\nAzureCopy file -a account_name -c container-name -t target-container -f file_name.gz -s Cool\n\n\nTo copy the file \nfile_name.gz\n nested in folder \noutputs\n (will remain nested in \noutputs\n in \ntarget-container\n)\n\n\nAzureCopy file -a account_name -c container-name -t target-container -f outputs/file_name.gz\n\n\nTo copy the file \nfile_name.gz\n nested in folder \noutputs\n and rename it \ncopy.gz\n (will remain nested in \noutputs\n in \ntarget-container\n)\n\n\nAzureCopy file -a account_name -c container-name -t target-container -f outputs/file_name.gz\n -n \ncopy.gz\n\n\nTo copy the file \nfile_name.gz\n nested in folder \noutputs\n to the root of the source container\n\n\nAzureCopy file -a account_name -c container-name -t container-name -f outputs/file_name.gz -r \"\"\n\n\nTo copy the file \nfile_name.gz\n nested in folder \noutputs\n to the root of the source container and rename it \ncopy.gz\n\n\nAzureCopy file -a account_name -c container-name -t container-name -f outputs/file_name.gz -r \"\" -n copy.gz\n\n\nTo copy the file \nfile_name.gz\n nested in folder \noutputs\n to folder \nresults\n in the source container\n\n\nAzureCopy file -a account_name -c container-name -t container-name -f outputs/file_name.gz -r results\n\n\nTo copy the file \nfile_name.gz\n nested in folder \noutputs\n to folder \nresults\n in the source container and rename it `copy.gz\n\n\nAzureCopy file -a account_name -c container-name -t container-name -f outputs/file_name.gz -r results -n copy.gz\n\n\nTo copy the file \nfile_name.gz\n nested in folder \noutputs\n to the root of the target container\n\n\nAzureCopy file -a account_name -c container-name -t target-container -f outputs/file_name.gz -r \"\"\n\n\nTo copy the file \nfile_name.gz\n nested in folder \noutputs\n to folder \nresults\n in the target container\n\n\nAzureCopy file -a account_name -c container-name -t target-container -f outputs/file_name.gz -r results\n\n\nUsage\n\n\nusage: AzureCopy file [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] -t TARGET_CONTAINER [-r RESET_PATH]\n                      [-s STORAGE_TIER] -f FILE\n\nCopy a file within Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -t TARGET_CONTAINER, --target_container TARGET_CONTAINER\n                        The target container to which the container/file/folder is to be copyd (this can be the same as the container_name if you want to copy a file/folder within a container\n  -r RESET_PATH, --reset_path RESET_PATH\n                        Set the path of the container/file/folder within a folder in the target container e.g. sequence_data/220202-m05722. If you want to place it directly in the container without any nesting, use or ''\n  -s STORAGE_TIER, --storage_tier STORAGE_TIER\n                        Set the storage tier for the container/file/folder to be copyd. Options are \nHot\n, \nCool\n, and \nArchive\n. Default is Hot\n  -f FILE, --file FILE  Name of blob file to copy in Azure storage. e.g. 2022-SEQ-0001_S1_L001_R1_001.fastq.gz\n  -n NAME, --name NAME  Name of duplicate file. Required if copying within the same container (and folder). Otherwise, the original name will be used.\n\n\n\n\nAzureCopy folder\n\n\nCopy a folder within your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nfolder name\n\n\n\n\nOptional arguments:\n\n\n\n\ntarget container: name of the container into which the container is to be copyd\n\n\npath to store the container: nest the container within the target container\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\nstorage tier: set the storage tier of the file in Azure storage. Options are Hot, Cool, Archive. Default is Hot\n\n\n\n\nExample commands:\n\n\nThese commands will use \ncontainer-name\n as the name of the container, \ntarget-container\n as the name of the target container, and \naccount_name\n as the name of the storage account\n\n\nTo copy the folder \nfolder_name\n\n\nAzureCopy folder -a account_name -c container-name -t target-container -f folder_name\n\n\nTo copy the folder \nfolder_name\n, and set the storage tier to \nCool\n\n\nAzureCopy folder -a account_name -c container-name -t target-container -f folder_name -s Cool\n\n\nTo copy the folder \nfolder_name\n nested in folder \noutputs\n\n\nAzureCopy folder -a account_name -c container-name -t target-container -f outputs/folder_name\n\n\nTo copy the folder \nfolder_name\n nested in folder \noutputs\n to the root of the source container\n\n\nAzureCopy folder -a account_name -c container-name -t container-name -f outputs/folder_name -r \"\"\n\n\nTo copy the folder \nfolder_name\n nested in folder \noutputs\n to folder \nresults\n in the source container\n\n\nAzureCopy folder -a account_name -c container-name -t container-name -f outputs/folder_name -r results\n\n\nTo copy the folder \nfolder_name\n nested in folder \noutputs\n to the root of the target container\n\n\nAzureCopy folder -a account_name -c container-name -t target-container -f outputs/folder_name -r \"\"\n\n\nTo copy the folder \nfolder_name\n nested in folder \noutputs\n to folder \nresults\n in the target container\n\n\nAzureCopy folder -a account_name -c container-name -t target-container -f outputs/folder_name -r results\n\n\nUsage\n\n\nusage: AzureCopy folder [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] -t TARGET_CONTAINER [-r RESET_PATH]\n                        [-s STORAGE_TIER] -f FOLDER\n\nCopy a folder within Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -t TARGET_CONTAINER, --target_container TARGET_CONTAINER\n                        The target container to which the container/file/folder is to be copyd (this can be the same as the container_name if you want to copy a file/folder within a container\n  -r RESET_PATH, --reset_path RESET_PATH\n                        Set the path of the container/file/folder within a folder in the target container e.g. sequence_data/220202-m05722. If you want to place it directly in the container without any nesting, use or ''\n  -s STORAGE_TIER, --storage_tier STORAGE_TIER\n                        Set the storage tier for the container/file/folder to be copyd. Options are \nHot\n, \nCool\n, and \nArchive\n. Default is Hot\n  -f FOLDER, --folder FOLDER\n                        Name of folder to copy in Azure storage. e.g. InterOp", 
            "title": "Copy"
        }, 
        {
            "location": "/copy/#azurecopy", 
            "text": "Copy containers, files, or folders within your Azure storage account.  Choose either the  container ,  file , or   folder  functionality  General usage  usage: AzureCopy [-h] {container,file,folder} ...\n\nCopy containers, files, or folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nAvailable functionality:\n  {container,file,folder}\n    container           Copy a container in Azure storage\n    file                Copy a file within Azure storage \n    folder              Copy a folder within Azure storage  AzureCopy container  Copy a container within your Azure storage account  Required arguments:   container name  account name   Optional arguments:   target container: name of the container into which the container is to be copied  path to store the container: nest the container within the target container  verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info  storage tier: set the storage tier of the file in Azure storage. Options are Hot, Cool, Archive. Default is Hot   Example commands:  These commands will use  container-name  as the name of the container,  target-container  as the name of the target container, and  account_name  as the name of the storage account  To perform a basic copy:  AzureCopy container -a account_name -c container-name -t target-container  To copy a container, and set the storage tier to  Cool  AzureCopy container -a account_name -c container-name -t target-container -s Cool  To copy a container and nest it into folder  outputs :  AzureCopy container -a account_name -c container-name -t target-container -r outputs  Usage  usage: AzureCopy container [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] -t TARGET_CONTAINER [-r RESET_PATH]\n                           [-s STORAGE_TIER]\n\nCopy a container in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -t TARGET_CONTAINER, --target_container TARGET_CONTAINER\n                        The target container to which the container/file/folder is to be copyd (this can be the same as the container_name if you want to copy a file/folder within a container\n  -r RESET_PATH, --reset_path RESET_PATH\n                        Set the path of the container/file/folder within a folder in the target container e.g. sequence_data/220202-m05722. If you want to place it directly in the container without any nesting, use or ''\n  -s STORAGE_TIER, --storage_tier STORAGE_TIER\n                        Set the storage tier for the container/file/folder to be copyd. Options are  Hot ,  Cool , and  Archive . Default is Hot  AzureCopy file  Copy a file within your Azure storage account  Required arguments:   container name  account name  file name   Optional arguments:   target container: name of the container into which the container is to be copied (can be the same as  container name )  path to store the container: nest the container within the target container  verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info  storage tier: set the storage tier of the file in Azure storage. Options are Hot, Cool, Archive. Default is Hot  name: set the name of the copied file   Example commands:  These commands will use  container-name  as the name of the container,  target-container  as the name of the target container, and  account_name  as the name of the storage account  To copy the file  file_name.gz  AzureCopy file -a account_name -c container-name -t target-container -f file_name.gz  To copy the file  file_name.gz  and rename it  copy.gz  AzureCopy file -a account_name -c container-name -t target-container -f file_name.gz -n copy.gz  To copy the file  file_name.gz , and set the storage tier to  Cool  AzureCopy file -a account_name -c container-name -t target-container -f file_name.gz -s Cool  To copy the file  file_name.gz  nested in folder  outputs  (will remain nested in  outputs  in  target-container )  AzureCopy file -a account_name -c container-name -t target-container -f outputs/file_name.gz  To copy the file  file_name.gz  nested in folder  outputs  and rename it  copy.gz  (will remain nested in  outputs  in  target-container )  AzureCopy file -a account_name -c container-name -t target-container -f outputs/file_name.gz  -n  copy.gz  To copy the file  file_name.gz  nested in folder  outputs  to the root of the source container  AzureCopy file -a account_name -c container-name -t container-name -f outputs/file_name.gz -r \"\"  To copy the file  file_name.gz  nested in folder  outputs  to the root of the source container and rename it  copy.gz  AzureCopy file -a account_name -c container-name -t container-name -f outputs/file_name.gz -r \"\" -n copy.gz  To copy the file  file_name.gz  nested in folder  outputs  to folder  results  in the source container  AzureCopy file -a account_name -c container-name -t container-name -f outputs/file_name.gz -r results  To copy the file  file_name.gz  nested in folder  outputs  to folder  results  in the source container and rename it `copy.gz  AzureCopy file -a account_name -c container-name -t container-name -f outputs/file_name.gz -r results -n copy.gz  To copy the file  file_name.gz  nested in folder  outputs  to the root of the target container  AzureCopy file -a account_name -c container-name -t target-container -f outputs/file_name.gz -r \"\"  To copy the file  file_name.gz  nested in folder  outputs  to folder  results  in the target container  AzureCopy file -a account_name -c container-name -t target-container -f outputs/file_name.gz -r results  Usage  usage: AzureCopy file [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] -t TARGET_CONTAINER [-r RESET_PATH]\n                      [-s STORAGE_TIER] -f FILE\n\nCopy a file within Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -t TARGET_CONTAINER, --target_container TARGET_CONTAINER\n                        The target container to which the container/file/folder is to be copyd (this can be the same as the container_name if you want to copy a file/folder within a container\n  -r RESET_PATH, --reset_path RESET_PATH\n                        Set the path of the container/file/folder within a folder in the target container e.g. sequence_data/220202-m05722. If you want to place it directly in the container without any nesting, use or ''\n  -s STORAGE_TIER, --storage_tier STORAGE_TIER\n                        Set the storage tier for the container/file/folder to be copyd. Options are  Hot ,  Cool , and  Archive . Default is Hot\n  -f FILE, --file FILE  Name of blob file to copy in Azure storage. e.g. 2022-SEQ-0001_S1_L001_R1_001.fastq.gz\n  -n NAME, --name NAME  Name of duplicate file. Required if copying within the same container (and folder). Otherwise, the original name will be used.  AzureCopy folder  Copy a folder within your Azure storage account  Required arguments:   container name  account name  folder name   Optional arguments:   target container: name of the container into which the container is to be copyd  path to store the container: nest the container within the target container  verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info  storage tier: set the storage tier of the file in Azure storage. Options are Hot, Cool, Archive. Default is Hot   Example commands:  These commands will use  container-name  as the name of the container,  target-container  as the name of the target container, and  account_name  as the name of the storage account  To copy the folder  folder_name  AzureCopy folder -a account_name -c container-name -t target-container -f folder_name  To copy the folder  folder_name , and set the storage tier to  Cool  AzureCopy folder -a account_name -c container-name -t target-container -f folder_name -s Cool  To copy the folder  folder_name  nested in folder  outputs  AzureCopy folder -a account_name -c container-name -t target-container -f outputs/folder_name  To copy the folder  folder_name  nested in folder  outputs  to the root of the source container  AzureCopy folder -a account_name -c container-name -t container-name -f outputs/folder_name -r \"\"  To copy the folder  folder_name  nested in folder  outputs  to folder  results  in the source container  AzureCopy folder -a account_name -c container-name -t container-name -f outputs/folder_name -r results  To copy the folder  folder_name  nested in folder  outputs  to the root of the target container  AzureCopy folder -a account_name -c container-name -t target-container -f outputs/folder_name -r \"\"  To copy the folder  folder_name  nested in folder  outputs  to folder  results  in the target container  AzureCopy folder -a account_name -c container-name -t target-container -f outputs/folder_name -r results  Usage  usage: AzureCopy folder [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] -t TARGET_CONTAINER [-r RESET_PATH]\n                        [-s STORAGE_TIER] -f FOLDER\n\nCopy a folder within Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -t TARGET_CONTAINER, --target_container TARGET_CONTAINER\n                        The target container to which the container/file/folder is to be copyd (this can be the same as the container_name if you want to copy a file/folder within a container\n  -r RESET_PATH, --reset_path RESET_PATH\n                        Set the path of the container/file/folder within a folder in the target container e.g. sequence_data/220202-m05722. If you want to place it directly in the container without any nesting, use or ''\n  -s STORAGE_TIER, --storage_tier STORAGE_TIER\n                        Set the storage tier for the container/file/folder to be copyd. Options are  Hot ,  Cool , and  Archive . Default is Hot\n  -f FOLDER, --folder FOLDER\n                        Name of folder to copy in Azure storage. e.g. InterOp", 
            "title": "AzureCopy"
        }, 
        {
            "location": "/credentials/", 
            "text": "AzureCredentials\n\n\nAzureCredentials allows you to store, modify, or delete your encrypted Azure connection string\n\n\nChoose either the \nstore\n or \ndelete\n functionality\n\n\nFind your connection string\n\n\nFind your account key\n\n\nGeneral Usage\n\n\nusage: AzureCredentials [-h] {store,delete} ...\n\nSet, modify, or delete Azure storage credentials\n\noptional arguments:\n  -h, --help      show this help message and exit\n\nAvailable functionality:\n  {store,delete}\n    store         Store or update Azure storage credentials\n    delete        Delete Azure storage credentials\n\n\n\n\n\nAzure credentials store\n\n\nStore or modify your account name and connection string\n\n\nRequired arguments:\n\n\n\n\naccount name\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nExample commands:\n\n\nTo store the account name \naccount_name\n and your connection string\n\n\nAzureCredentials store -a account_name\n\n\nNOTE: You will be prompted to enter your connection string by the script. Note that, as a security precaution, you will not see the text you entered.\n\n\nUsage\n\n\nusage: AzureCredentials store [-h] -a ACCOUNT_NAME [-v VERBOSITY]\n\nStore or update Azure storage credentials\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n\n\n\n\nAzure credentials delete\n\n\nDelete encrypted connection string\n\n\nRequired arguments:\n\n\n\n\naccount name\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nExample command:\n\n\nTo delete connection string associated with the account name \naccount_name\n \n\n\nAzureCredentials delete -a account_name\n\n\nNOTE: You will be prompted to enter your connection string by the script. Note that, as a security precaution, you will not see the text you entered.\n\n\nUsage\n\n\nusage: AzureCredentials delete [-h] -a ACCOUNT_NAME [-v VERBOSITY]\n\nDelete Azure storage credentials\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.", 
            "title": "Credentials"
        }, 
        {
            "location": "/credentials/#azurecredentials", 
            "text": "AzureCredentials allows you to store, modify, or delete your encrypted Azure connection string  Choose either the  store  or  delete  functionality  Find your connection string  Find your account key  General Usage  usage: AzureCredentials [-h] {store,delete} ...\n\nSet, modify, or delete Azure storage credentials\n\noptional arguments:\n  -h, --help      show this help message and exit\n\nAvailable functionality:\n  {store,delete}\n    store         Store or update Azure storage credentials\n    delete        Delete Azure storage credentials  Azure credentials store  Store or modify your account name and connection string  Required arguments:   account name   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Example commands:  To store the account name  account_name  and your connection string  AzureCredentials store -a account_name  NOTE: You will be prompted to enter your connection string by the script. Note that, as a security precaution, you will not see the text you entered.  Usage  usage: AzureCredentials store [-h] -a ACCOUNT_NAME [-v VERBOSITY]\n\nStore or update Azure storage credentials\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.  Azure credentials delete  Delete encrypted connection string  Required arguments:   account name   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Example command:  To delete connection string associated with the account name  account_name    AzureCredentials delete -a account_name  NOTE: You will be prompted to enter your connection string by the script. Note that, as a security precaution, you will not see the text you entered.  Usage  usage: AzureCredentials delete [-h] -a ACCOUNT_NAME [-v VERBOSITY]\n\nDelete Azure storage credentials\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.", 
            "title": "AzureCredentials"
        }, 
        {
            "location": "/delete/", 
            "text": "AzureDelete\n\n\nDelete containers, files, or folders from your Azure storage account\n\n\nChoose either the \ncontainer\n, \nfile\n, or  \nfolder\n functionality\n\n\nGeneral usage\n\n\nusage: AzureDelete [-h] {container,file,folder} ...\n\nMove and/or delete containers, files, or folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nAvailable functionality:\n  {container,file,folder}\n    container           Delete a container in Azure storage\n    file                Delete a file in Azure storage\n    folder              Delete a folder in Azure storage\n\n\n\n\nAzureDelete container\n\n\nDelete a container from your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nExample command:\n\n\nThese commands will use \ncontainer-name\n as the name of the container and \naccount_name\n as the name of the storage account\n\n\nTo delete a container from your Azure storage account\n\n\nAzureDelete container -a account_name -c container-name\n\n\nUsage\n\n\nusage: AzureDelete container [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY]\n\nDelete a container in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n\n\n\n\nAzureDelete file\n\n\nDelete a file from your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nfile name\n\n\n\n\nOptional arguments:\n\n\n\n\nretention time: time to retain deleted files. Default is 8 days\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nExample commands:\n\n\nThese commands will use \ncontainer-name\n as the name of the container and \naccount_name\n as the name of the storage account\n\n\nTo delete the file \nfile_name.gz\n from your Azure storage account\n\n\nAzureDelete file -a account_name -c container-name -f file_name.gz\n\n\nTo delete the file \nfile_name.gz\n nested in folder outputs from your Azure storage account, and retain it for 10 days\n\n\nAzureDelete file -a account_name -c container-name -f outputs/file_name.gz -r 10\n\n\nUsage\n\n\nusage: AzureDelete file [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] -f FILE [-r RETENTION_TIME]\n\nDelete a file in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -f FILE, --file FILE  Name of blob file to delete in Azure storage. e.g. 2022-SEQ-0001_S1_L001_R1_001.fastq.gz\n  -r RETENTION_TIME, --retention_time RETENTION_TIME\n                        Retention time for deleted files. Default is 8 days. Must be between 1 and 365\n\n\n\n\nAzureDelete folder\n\n\nDelete a folder from your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nfolder name\n\n\n\n\nOptional arguments:\n\n\n\n\nretention time: time to retain deleted files in the folder. Default is 8 days\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nExample commands:\n\n\nThese commands will use \ncontainer-name\n as the name of the container and \naccount_name\n as the name of the storage account\n\n\nTo delete the folder \nfolder_name\n from your Azure storage account\n\n\nAzureDelete folder -a account_name -c container-name -f folder_name\n\n\nTo delete the folder \nfolder_name\n nested in folder outputs from your Azure storage account, and retain it for 10 days\n\n\nAzureDelete folder -a account_name -c container-name -f outputs/folder_name -r 10\n\n\nUsage\n\n\nusage: AzureDelete folder [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] -f FOLDER [-r RETENTION_TIME]\n\nDelete a folder in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -f FOLDER, --folder FOLDER\n                        Name of folder to delete in Azure storage. e.g. InterOp\n  -r RETENTION_TIME, --retention_time RETENTION_TIME\n                        Retention time for deleted files. Default is 8 days", 
            "title": "Delete"
        }, 
        {
            "location": "/delete/#azuredelete", 
            "text": "Delete containers, files, or folders from your Azure storage account  Choose either the  container ,  file , or   folder  functionality  General usage  usage: AzureDelete [-h] {container,file,folder} ...\n\nMove and/or delete containers, files, or folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nAvailable functionality:\n  {container,file,folder}\n    container           Delete a container in Azure storage\n    file                Delete a file in Azure storage\n    folder              Delete a folder in Azure storage  AzureDelete container  Delete a container from your Azure storage account  Required arguments:   container name  account name   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Example command:  These commands will use  container-name  as the name of the container and  account_name  as the name of the storage account  To delete a container from your Azure storage account  AzureDelete container -a account_name -c container-name  Usage  usage: AzureDelete container [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY]\n\nDelete a container in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.  AzureDelete file  Delete a file from your Azure storage account  Required arguments:   container name  account name  file name   Optional arguments:   retention time: time to retain deleted files. Default is 8 days  verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Example commands:  These commands will use  container-name  as the name of the container and  account_name  as the name of the storage account  To delete the file  file_name.gz  from your Azure storage account  AzureDelete file -a account_name -c container-name -f file_name.gz  To delete the file  file_name.gz  nested in folder outputs from your Azure storage account, and retain it for 10 days  AzureDelete file -a account_name -c container-name -f outputs/file_name.gz -r 10  Usage  usage: AzureDelete file [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] -f FILE [-r RETENTION_TIME]\n\nDelete a file in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -f FILE, --file FILE  Name of blob file to delete in Azure storage. e.g. 2022-SEQ-0001_S1_L001_R1_001.fastq.gz\n  -r RETENTION_TIME, --retention_time RETENTION_TIME\n                        Retention time for deleted files. Default is 8 days. Must be between 1 and 365  AzureDelete folder  Delete a folder from your Azure storage account  Required arguments:   container name  account name  folder name   Optional arguments:   retention time: time to retain deleted files in the folder. Default is 8 days  verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Example commands:  These commands will use  container-name  as the name of the container and  account_name  as the name of the storage account  To delete the folder  folder_name  from your Azure storage account  AzureDelete folder -a account_name -c container-name -f folder_name  To delete the folder  folder_name  nested in folder outputs from your Azure storage account, and retain it for 10 days  AzureDelete folder -a account_name -c container-name -f outputs/folder_name -r 10  Usage  usage: AzureDelete folder [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] -f FOLDER [-r RETENTION_TIME]\n\nDelete a folder in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -f FOLDER, --folder FOLDER\n                        Name of folder to delete in Azure storage. e.g. InterOp\n  -r RETENTION_TIME, --retention_time RETENTION_TIME\n                        Retention time for deleted files. Default is 8 days", 
            "title": "AzureDelete"
        }, 
        {
            "location": "/download/", 
            "text": "AzureDownload\n\n\nDownload containers, files, or folders from your Azure storage account\n\n\nChoose either the \ncontainer\n, \nfile\n, or  \nfolder\n functionality\n\n\nGeneral usage\n\n\nusage: AzureDownload [-h] {container,file,folder} ...\n\nDownload containers/files/folders from Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nAvailable functionality:\n  {container,file,folder}\n    container           Download a container from Azure storage\n    file                Download a file from Azure storage\n    folder              Download a folder from Azure storage\n\n\n\n\nAzureDownload container\n\n\nDownload a container from your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\n\n\nOptional arguments:\n\n\n\n\noutput path: local path where container is to be saved. Default is your current working directory\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nExample commands:\n\n\nThese commands will use \ncontainer-name\n as the name of the container and \naccount_name\n as the name of the storage account\n\n\nTo perform a basic container download (download to your current working directory)\n\n\nAzureDownload container -a account name -c container-name\n\n\nTo download a container to the folder \noutputs\n in your current working directory\n\n\nAzureDownload container -a account name -c container-name -o outputs\n\n\nTo download a container to the folder \n/home/users/outputs\n \n\n\nAzureDownload container -a account name -c container-name -o /home/users/outputs\n\n\nUsage\n\n\nusage: AzureDownload container [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] [-o OUTPUT_PATH]\n\nDownload a container from Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -o OUTPUT_PATH, --output_path OUTPUT_PATH\n                        Name and path of directory in which the outputs are to be saved. Default is your $CWD\n\n\n\n\nAzureDownload file\n\n\nDownload a file from your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nfile name\n\n\n\n\nOptional arguments:\n\n\n\n\noutput path: local path where container is to be saved. Default is your current working directory\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nExample commands:\n\n\nThese commands will use \ncontainer-name\n as the name of the container and \naccount_name\n as the name of the storage account\n\n\nTo download the file \nfile_name.gz\n to your current working directory\n\n\nAzureDownload file -a account name -c container-name -f file_name.gz\n\n\nTo download the file \nfile_name.gz\n nested in the \noutputs\n folder to your current working directory\n\n\nAzureDownload file -a account name -c container-name -f outputs/file_name.gz\n\n\nTo download the file \nfile_name.gz\n nested in the \noutputs\n folder to the folder \nfiles\n in your current working directory\n\n\nAzureDownload file -a account name -c container-name -f outputs/file_name.gz -o files\n\n\nTo download the file \nfile_name.gz\n to the folder \n/home/users/outputs\n \n\n\nAzureDownload file -a account name -c container-name -f file_name.gz -o /home/users/outputs\n\n\nUsage\n\n\nusage: AzureDownload file [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] [-o OUTPUT_PATH] -f FILE\n\nDownload a file from Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -o OUTPUT_PATH, --output_path OUTPUT_PATH\n                        Name and path of directory in which the outputs are to be saved. Default is your $CWD\n  -f FILE, --file FILE  Name of file to download from Azure storage.e.g. 2022-SEQ-0001_S1_L001_R1_001.fastq.gz\n\n\n\n\nAzureDownload folder\n\n\nDownload a folder from your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nfolder name\n\n\n\n\nOptional arguments:\n\n\n\n\noutput path: local path where container is to be saved. Default is your current working directory\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nExample commands:\n\n\nThese commands will use \ncontainer-name\n as the name of the container and \naccount_name\n as the name of the storage account\n\n\nTo download the folder \nfolder_name\n to your current working directory\n\n\nAzureDownload folder -a account name -c container-name -f folder_name\n\n\nTo download the folder \nfolder_name\n nested in the \noutputs\n folder to your current working directory\n\n\nAzureDownload folder -a account name -c container-name -f outputs/folder_name\n\n\nTo download the folder \nfolder_name\n nested in the \noutputs\n folder to the folder \nfolders\n in your current working directory\n\n\nAzureDownload folder -a account name -c container-name -f outputs/folder_name -o folders\n\n\nTo download the folder \nfolder_name\n to the folder \n/home/users/outputs\n \n\n\nAzureDownload folder -a account name -c container-name -f folder_name -o /home/users/outputs\n\n\nUsage\n\n\nusage: AzureDownload folder [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] [-o OUTPUT_PATH] -f FOLDER\n\nDownload a folder from Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -o OUTPUT_PATH, --output_path OUTPUT_PATH\n                        Name and path of directory in which the outputs are to be saved. Default is your $CWD\n  -f FOLDER, --folder FOLDER\n                        Name of the folder to download from Azure storage e.g. InterOp", 
            "title": "Download"
        }, 
        {
            "location": "/download/#azuredownload", 
            "text": "Download containers, files, or folders from your Azure storage account  Choose either the  container ,  file , or   folder  functionality  General usage  usage: AzureDownload [-h] {container,file,folder} ...\n\nDownload containers/files/folders from Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nAvailable functionality:\n  {container,file,folder}\n    container           Download a container from Azure storage\n    file                Download a file from Azure storage\n    folder              Download a folder from Azure storage  AzureDownload container  Download a container from your Azure storage account  Required arguments:   container name  account name   Optional arguments:   output path: local path where container is to be saved. Default is your current working directory  verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Example commands:  These commands will use  container-name  as the name of the container and  account_name  as the name of the storage account  To perform a basic container download (download to your current working directory)  AzureDownload container -a account name -c container-name  To download a container to the folder  outputs  in your current working directory  AzureDownload container -a account name -c container-name -o outputs  To download a container to the folder  /home/users/outputs    AzureDownload container -a account name -c container-name -o /home/users/outputs  Usage  usage: AzureDownload container [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] [-o OUTPUT_PATH]\n\nDownload a container from Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -o OUTPUT_PATH, --output_path OUTPUT_PATH\n                        Name and path of directory in which the outputs are to be saved. Default is your $CWD  AzureDownload file  Download a file from your Azure storage account  Required arguments:   container name  account name  file name   Optional arguments:   output path: local path where container is to be saved. Default is your current working directory  verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Example commands:  These commands will use  container-name  as the name of the container and  account_name  as the name of the storage account  To download the file  file_name.gz  to your current working directory  AzureDownload file -a account name -c container-name -f file_name.gz  To download the file  file_name.gz  nested in the  outputs  folder to your current working directory  AzureDownload file -a account name -c container-name -f outputs/file_name.gz  To download the file  file_name.gz  nested in the  outputs  folder to the folder  files  in your current working directory  AzureDownload file -a account name -c container-name -f outputs/file_name.gz -o files  To download the file  file_name.gz  to the folder  /home/users/outputs    AzureDownload file -a account name -c container-name -f file_name.gz -o /home/users/outputs  Usage  usage: AzureDownload file [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] [-o OUTPUT_PATH] -f FILE\n\nDownload a file from Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -o OUTPUT_PATH, --output_path OUTPUT_PATH\n                        Name and path of directory in which the outputs are to be saved. Default is your $CWD\n  -f FILE, --file FILE  Name of file to download from Azure storage.e.g. 2022-SEQ-0001_S1_L001_R1_001.fastq.gz  AzureDownload folder  Download a folder from your Azure storage account  Required arguments:   container name  account name  folder name   Optional arguments:   output path: local path where container is to be saved. Default is your current working directory  verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Example commands:  These commands will use  container-name  as the name of the container and  account_name  as the name of the storage account  To download the folder  folder_name  to your current working directory  AzureDownload folder -a account name -c container-name -f folder_name  To download the folder  folder_name  nested in the  outputs  folder to your current working directory  AzureDownload folder -a account name -c container-name -f outputs/folder_name  To download the folder  folder_name  nested in the  outputs  folder to the folder  folders  in your current working directory  AzureDownload folder -a account name -c container-name -f outputs/folder_name -o folders  To download the folder  folder_name  to the folder  /home/users/outputs    AzureDownload folder -a account name -c container-name -f folder_name -o /home/users/outputs  Usage  usage: AzureDownload folder [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] [-o OUTPUT_PATH] -f FOLDER\n\nDownload a folder from Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -o OUTPUT_PATH, --output_path OUTPUT_PATH\n                        Name and path of directory in which the outputs are to be saved. Default is your $CWD\n  -f FOLDER, --folder FOLDER\n                        Name of the folder to download from Azure storage e.g. InterOp", 
            "title": "AzureDownload"
        }, 
        {
            "location": "/install/", 
            "text": "Installation\n\n\nAzureStorage is available as a conda package, so conda must be installed on your system.\n\n\nConda\n\n\nSkip this step if you have already installed conda\n\n\nwget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;\nbash miniconda.sh -b -p $HOME/miniconda\nconda update -q conda\n\n\n\n\nAzureStorage\n\n\nYou can now install the AzureStorage package (this command creates a new conda environment with AzureStorage installed):\n\n\nconda create -n azurestorage -c olc-bioinformatics azure_storage=0.0.4\n\n\nCredentials\n\n\nYou must store your Azure storage connection string before running any of the other scripts\n\n\nFind your connection string\n\n\n\n\nIn a browser, navigate to the \nazure portal\n\n\nLogin using your corporate credentials\n\n\nFrom the Azure services (top of page), select 'Storage accounts'\n\n\nClick on your account Name (ask a bioinformatician for this info)\n\n\nFrom the options on the left, navigate down to and select \"Access keys\"\n\n\nYou will be able to \"show\" and copy your access key from this page\n\n\n\n\nFind your account key\n\n\nOnce you know your account name and connection string, run:\n\n\nAzureCredentials store -a account_name\n\n\nYour credentials will be encrypted, and stored in the folder containing the \nAzureStorage\n package scripts\n\n\nTests\n\n\nIf you encounter issues with the AzureStorage package, tests are available to ensure that the installation was successful and your credentials are valid.\n\n\nYou will need to clone this repository and run the tests with pytest\n\n\ngit clone https://github.com/OLC-LOC-Bioinformatics/AzureStorage.git\n\n\ncd AzureStorage\n\n\npython -m pytest tests/ --cov=azure_storage --cov-config=.coveragec", 
            "title": "Install"
        }, 
        {
            "location": "/install/#installation", 
            "text": "AzureStorage is available as a conda package, so conda must be installed on your system.  Conda  Skip this step if you have already installed conda  wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;\nbash miniconda.sh -b -p $HOME/miniconda\nconda update -q conda  AzureStorage  You can now install the AzureStorage package (this command creates a new conda environment with AzureStorage installed):  conda create -n azurestorage -c olc-bioinformatics azure_storage=0.0.4  Credentials  You must store your Azure storage connection string before running any of the other scripts  Find your connection string   In a browser, navigate to the  azure portal  Login using your corporate credentials  From the Azure services (top of page), select 'Storage accounts'  Click on your account Name (ask a bioinformatician for this info)  From the options on the left, navigate down to and select \"Access keys\"  You will be able to \"show\" and copy your access key from this page   Find your account key  Once you know your account name and connection string, run:  AzureCredentials store -a account_name  Your credentials will be encrypted, and stored in the folder containing the  AzureStorage  package scripts  Tests  If you encounter issues with the AzureStorage package, tests are available to ensure that the installation was successful and your credentials are valid.  You will need to clone this repository and run the tests with pytest  git clone https://github.com/OLC-LOC-Bioinformatics/AzureStorage.git  cd AzureStorage  python -m pytest tests/ --cov=azure_storage --cov-config=.coveragec", 
            "title": "Installation"
        }, 
        {
            "location": "/list/", 
            "text": "AzureList\n\n\nList and optionally filter containers and/or files in your Azure storage account\n\n\nChoose either the \ncontainer\n, or the \nsearch\n functionality\n\n\nThis script allows you to filter using regular expressions, so make sure you \nknow what you're doing\n, \ncheck out a tutorial\n, \nlook at a cheatsheet\n, and/or \ntest your expressions\n\n\nImportant:\n since the regular expressions are being entered on the command line, you will need to escape certain characters e.g. ! should be !\n\n\nGeneral Usage\n\n\nusage: AzureList [-h] {container,search} ...\n\nExplore your Azure storage account\n\noptional arguments:\n  -h, --help          show this help message and exit\n\nAvailable functionality:\n  {container,search}\n    container         Filter and list containers in your Azure storage account\n    search            Search files in a container (or containers) in Azure storage\n\n\n\n\nAzureList container\n\n\nList and optionally filter containers in your Azure storage account\n\n\nAzureList container required arguments\n\n\n\n\naccount name\n\n\n\n\nAzureList container optional arguments\n\n\n\n\nexpression: expression to use to filter the containers. Regular expressions are supported. Note that since the regular expression is being entered on the command line, you may need to escape certain characters e.g. ! should be \\!\n\n\noutput_file: name and path of file in which the outputs are to be saved.\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nAzureList container example commands\n\n\nThese commands will use \naccount_name\n as the name of the storage account\n\n\nTo list all containers in your Azure storage account\n\n\nAzureList container -a account_name\n\n\nTo confirm the container \n191216-dar\n is present in your account\n\n\nAzureList container -a account_name 191216-dar\n\n\nTo filter the list of containers to those starting with \n19\n\n\nAzureList container -a account_name 19*\n\n\nTo filter the list of container to those starting with \n19\n and four additional digits followed by a dash\n\n\nAzureList container -a account_name 19d{4}-*\n\n\nTo filter the list of containers to those starting with six digits, a dash, and three digits\n\n\nAzureList container -a account_name \\\\d{6}-\\\\D{3}\n\n\nTo filter the list of containers to those ending with \noutputs\n\n\nAzureList container -a account_name *outputs\\$\n\n\nTo filter the list of containers to those that start with \n19\n and four additional digits, followed by a dash, three letters, and does not contain the word \noutputs\n\n\nAzureList container -a account_name 1912\\\\d{2}-\\\\D{3}\\(\\?\\!*output\\)\n\n\nAzureList container usage\n\n\nusage: AzureList container [-h] -a ACCOUNT_NAME [-v VERBOSITY] [-o OUTPUT_FILE]\n                           [expression]\n\nFilter and list containers in your Azure storage account\n\npositional arguments:\n  expression            Expression to search. This command supports regular expressions. e.g. 1912* will return all containers starting with 1912, including 191216-dar Note that since the regular expression is being entered on the command line, you may need to escape certain characters e.g. ! should be \\!\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n                        Optionally provide the name and path of file in which the outputs are to be saved.\n\n\n\n\nAzureList search\n\n\nFilter files in a container (or containers) in Azure storage\n\n\nAzureList search required arguments\n\n\n\n\naccount name\n\n\n\n\nAzureList search optional arguments\n\n\n\n\ncontainer_name: name of the Azure storage container. Regular expressions are supported. Note that since the regular expression is being entered on the command line, you may need to escape certain characters e.g. ! should be \\!\n\n\nexpression: expression to use to filter the containers. Regular expressions are supported. Note that since the regular expression is being entered on the command line, you may need to escape certain characters e.g. ! should be \\!\n\n\noutput_file: name and path of file in which the outputs are to be saved.\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nAzureList search example commands\n\n\nThese commands will use \naccount_name\n as the name of the storage account. Note that all the regex examples used in \nAzureList container\n can be used here\n\n\nTo list all files in all containers in your storage account\n\n\nAzureList search -a account_name\n\n\nTo list all files in all containers ending with \n.gz\n\n\nAzureList search -a account_name \\*.gz\n\n\nTo list all files in the container \ncontainer-name\n\n\nAzureList search -a account_name -c container_name\n\n\nTo list all files in the container \ncontainer-name\n starting with \nreports\n\n\nAzureList search -a account_name -c container_name reports*\n\n\nTo list all files in the container \ncontainer-name\n ending with \n.gz\n\n\nAzureList search -a account_name -c container-name \\*.gz\n\n\nTo list all files in the container \ncontainer-name\n that contain \n.gz\n \n\n\nAzureList search -a account_name -c container-name \\*.gz*\n\n\nTo list all files in the container \ncontainer-name\n that contain \n.gz\n (but not at the end)\n\n\nAzureList search -a account_name -c container-name \\*.gz.+\n\n\nAzureList search usage\n\n\nusage: AzureList search [-h] -a ACCOUNT_NAME [-v VERBOSITY] [-o OUTPUT_FILE]\n                        [-c [CONTAINER_NAME]]\n                        [expression]\n\nFilter files in a container (or containers) in Azure storage\n\npositional arguments:\n  expression            Expression to search. This command supports regular expressions. e.g. 1912* will return all containers starting with 1912, including 191216-dar Note that since the regular expression is being entered on the command line, you may need to escape certain characters e.g. ! should be \\!\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n                        Optionally provide the name and path of file in which the outputs are to be saved.\n  -c [CONTAINER_NAME], --container_name [CONTAINER_NAME]\n                        Name of the Azure storage container. This command supports regular expressions e.g. 1912* will return all containers starting with 1912.Note that since the regular expression is being entered on the command line, you may need to escape certain characters e.g. ! should be \\! You can make your queries as complex as you wish: 1912\\d{2}-\\D{3}\\(\\?\\!*output\\) will only return containers that start with 1912, and have two additional digits. If the word output is present, any matches are ignored. There also have to be exactly three letters following a dash and the first six numbers e.g. 191216-dar and 191227-dar will be returned but not 191216-dar-outputs 191202-test, 191216dar, 1912162-dar, 191203-m05722, 191114-gta, or 200105-dar (and many others)", 
            "title": "List"
        }, 
        {
            "location": "/list/#azurelist", 
            "text": "List and optionally filter containers and/or files in your Azure storage account  Choose either the  container , or the  search  functionality  This script allows you to filter using regular expressions, so make sure you  know what you're doing ,  check out a tutorial ,  look at a cheatsheet , and/or  test your expressions  Important:  since the regular expressions are being entered on the command line, you will need to escape certain characters e.g. ! should be !  General Usage  usage: AzureList [-h] {container,search} ...\n\nExplore your Azure storage account\n\noptional arguments:\n  -h, --help          show this help message and exit\n\nAvailable functionality:\n  {container,search}\n    container         Filter and list containers in your Azure storage account\n    search            Search files in a container (or containers) in Azure storage  AzureList container  List and optionally filter containers in your Azure storage account  AzureList container required arguments   account name   AzureList container optional arguments   expression: expression to use to filter the containers. Regular expressions are supported. Note that since the regular expression is being entered on the command line, you may need to escape certain characters e.g. ! should be \\!  output_file: name and path of file in which the outputs are to be saved.  verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   AzureList container example commands  These commands will use  account_name  as the name of the storage account  To list all containers in your Azure storage account  AzureList container -a account_name  To confirm the container  191216-dar  is present in your account  AzureList container -a account_name 191216-dar  To filter the list of containers to those starting with  19  AzureList container -a account_name 19*  To filter the list of container to those starting with  19  and four additional digits followed by a dash  AzureList container -a account_name 19d{4}-*  To filter the list of containers to those starting with six digits, a dash, and three digits  AzureList container -a account_name \\\\d{6}-\\\\D{3}  To filter the list of containers to those ending with  outputs  AzureList container -a account_name *outputs\\$  To filter the list of containers to those that start with  19  and four additional digits, followed by a dash, three letters, and does not contain the word  outputs  AzureList container -a account_name 1912\\\\d{2}-\\\\D{3}\\(\\?\\!*output\\)  AzureList container usage  usage: AzureList container [-h] -a ACCOUNT_NAME [-v VERBOSITY] [-o OUTPUT_FILE]\n                           [expression]\n\nFilter and list containers in your Azure storage account\n\npositional arguments:\n  expression            Expression to search. This command supports regular expressions. e.g. 1912* will return all containers starting with 1912, including 191216-dar Note that since the regular expression is being entered on the command line, you may need to escape certain characters e.g. ! should be \\!\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n                        Optionally provide the name and path of file in which the outputs are to be saved.  AzureList search  Filter files in a container (or containers) in Azure storage  AzureList search required arguments   account name   AzureList search optional arguments   container_name: name of the Azure storage container. Regular expressions are supported. Note that since the regular expression is being entered on the command line, you may need to escape certain characters e.g. ! should be \\!  expression: expression to use to filter the containers. Regular expressions are supported. Note that since the regular expression is being entered on the command line, you may need to escape certain characters e.g. ! should be \\!  output_file: name and path of file in which the outputs are to be saved.  verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   AzureList search example commands  These commands will use  account_name  as the name of the storage account. Note that all the regex examples used in  AzureList container  can be used here  To list all files in all containers in your storage account  AzureList search -a account_name  To list all files in all containers ending with  .gz  AzureList search -a account_name \\*.gz  To list all files in the container  container-name  AzureList search -a account_name -c container_name  To list all files in the container  container-name  starting with  reports  AzureList search -a account_name -c container_name reports*  To list all files in the container  container-name  ending with  .gz  AzureList search -a account_name -c container-name \\*.gz  To list all files in the container  container-name  that contain  .gz    AzureList search -a account_name -c container-name \\*.gz*  To list all files in the container  container-name  that contain  .gz  (but not at the end)  AzureList search -a account_name -c container-name \\*.gz.+  AzureList search usage  usage: AzureList search [-h] -a ACCOUNT_NAME [-v VERBOSITY] [-o OUTPUT_FILE]\n                        [-c [CONTAINER_NAME]]\n                        [expression]\n\nFilter files in a container (or containers) in Azure storage\n\npositional arguments:\n  expression            Expression to search. This command supports regular expressions. e.g. 1912* will return all containers starting with 1912, including 191216-dar Note that since the regular expression is being entered on the command line, you may need to escape certain characters e.g. ! should be \\!\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n                        Optionally provide the name and path of file in which the outputs are to be saved.\n  -c [CONTAINER_NAME], --container_name [CONTAINER_NAME]\n                        Name of the Azure storage container. This command supports regular expressions e.g. 1912* will return all containers starting with 1912.Note that since the regular expression is being entered on the command line, you may need to escape certain characters e.g. ! should be \\! You can make your queries as complex as you wish: 1912\\d{2}-\\D{3}\\(\\?\\!*output\\) will only return containers that start with 1912, and have two additional digits. If the word output is present, any matches are ignored. There also have to be exactly three letters following a dash and the first six numbers e.g. 191216-dar and 191227-dar will be returned but not 191216-dar-outputs 191202-test, 191216dar, 1912162-dar, 191203-m05722, 191114-gta, or 200105-dar (and many others)", 
            "title": "AzureList"
        }, 
        {
            "location": "/move/", 
            "text": "AzureMove\n\n\nMove containers, files, or folders within your Azure storage account.\n\n\nChoose either the \ncontainer\n, \nfile\n, or  \nfolder\n functionality\n\n\nGeneral usage\n\n\nusage: AzureMove [-h] {container,file,folder} ...\n\nMove containers, files, or folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nAvailable functionality:\n  {container,file,folder}\n    container           Move a container in Azure storage\n    file                Move a file within Azure storage \n    folder              Move a folder within Azure storage\n\n\n\n\n\nAzureMove container\n\n\nMove a container within your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\n\n\nOptional arguments:\n\n\n\n\ntarget container: name of the container into which the container is to be moved\n\n\npath to store the container: nest the container within the target container\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\nstorage tier: set the storage tier of the file in Azure storage. Options are Hot, Cool, Archive. Default is Hot\n\n\n\n\nExample commands:\n\n\nThese commands will use \ncontainer-name\n as the name of the container, \ntarget-container\n as the name of the target container, and \naccount_name\n as the name of the storage account\n\n\nTo perform a basic move (this also renames a container):\n\n\nAzureMove container -a account_name -c container-name -t target-container\n\n\nTo move a container, and set the storage tier to \nCool\n\n\nAzureMove container -a account_name -c container-name -t target-container -s Cool\n\n\nTo move a container and nest it into folder \noutputs\n:\n\n\nAzureMove container -a account_name -c container-name -t target-container -r outputs\n\n\nUsage\n\n\nusage: AzureMove container [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] -t TARGET_CONTAINER [-r RESET_PATH]\n                           [-s STORAGE_TIER]\n\nMove a container in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -t TARGET_CONTAINER, --target_container TARGET_CONTAINER\n                        The target container to which the container/file/folder is to be moved (this can be the same as the container_name if you want to move a file/folder within a container\n  -r RESET_PATH, --reset_path RESET_PATH\n                        Set the path of the container/file/folder within a folder in the target container e.g. sequence_data/220202-m05722. If you want to place it directly in the container without any nesting, use or ''\n  -s STORAGE_TIER, --storage_tier STORAGE_TIER\n                        Set the storage tier for the container/file/folder to be moved. Options are \nHot\n, \nCool\n, and \nArchive\n. Default is Hot\n\n\n\n\nAzureMove file\n\n\nMove a file within your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nfile name\n\n\n\n\nOptional arguments:\n\n\n\n\ntarget container: name of the container into which the container is to be moved\n\n\npath to store the container: nest the container within the target container\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\nstorage tier: set the storage tier of the file in Azure storage. Options are Hot, Cool, Archive. Default is Hot\n\n\n\n\nExample commands:\n\n\nThese commands will use \ncontainer-name\n as the name of the container, \ntarget-container\n as the name of the target container, and \naccount_name\n as the name of the storage account\n\n\nTo move the file \nfile_name.gz\n\n\nAzureMove file -a account_name -c container-name -t target-container -f file_name.gz\n\n\nTo move the file \nfile_name.gz\n, and set the storage tier to \nCool\n\n\nAzureMove file -a account_name -c container-name -t target-container -f file_name.gz -s Cool\n\n\nTo move the file \nfile_name.gz\n nested in folder \noutputs\n\n\nAzureMove file -a account_name -c container-name -t target-container -f outputs/file_name.gz\n\n\nTo move the file \nfile_name.gz\n nested in folder \noutputs\n to the root of the source container\n\n\nAzureMove file -a account_name -c container-name -t container-name -f outputs/file_name.gz -r \"\"\n\n\nTo move the file \nfile_name.gz\n nested in folder \noutputs\n to folder \nresults\n in the source container\n\n\nAzureMove file -a account_name -c container-name -t container-name -f outputs/file_name.gz -r results\n\n\nTo move the file \nfile_name.gz\n nested in folder \noutputs\n to the root of the target container\n\n\nAzureMove file -a account_name -c container-name -t target-container -f outputs/file_name.gz -r \"\"\n\n\nTo move the file \nfile_name.gz\n nested in folder \noutputs\n to folder \nresults\n in the target container\n\n\nAzureMove file -a account_name -c container-name -t target-container -f outputs/file_name.gz -r results\n\n\nUsage\n\n\nusage: AzureMove file [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] -t TARGET_CONTAINER [-r RESET_PATH]\n                      [-s STORAGE_TIER] -f FILE\n\nMove a file within Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -t TARGET_CONTAINER, --target_container TARGET_CONTAINER\n                        The target container to which the container/file/folder is to be moved (this can be the same as the container_name if you want to move a file/folder within a container\n  -r RESET_PATH, --reset_path RESET_PATH\n                        Set the path of the container/file/folder within a folder in the target container e.g. sequence_data/220202-m05722. If you want to place it directly in the container without any nesting, use or ''\n  -s STORAGE_TIER, --storage_tier STORAGE_TIER\n                        Set the storage tier for the container/file/folder to be moved. Options are \nHot\n, \nCool\n, and \nArchive\n. Default is Hot\n  -f FILE, --file FILE  Name of blob file to move in Azure storage. e.g. 2022-SEQ-0001_S1_L001_R1_001.fastq.gz\n\n\n\n\nAzureMove folder\n\n\nMove a folder within your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nfolder name\n\n\n\n\nOptional arguments:\n\n\n\n\ntarget container: name of the container into which the container is to be moved\n\n\npath to store the container: nest the container within the target container\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\nstorage tier: set the storage tier of the file in Azure storage. Options are Hot, Cool, Archive. Default is Hot\n\n\n\n\nExample commands:\n\n\nThese commands will use \ncontainer-name\n as the name of the container, \ntarget-container\n as the name of the target container, and \naccount_name\n as the name of the storage account\n\n\nTo move the folder \nfolder_name\n\n\nAzureMove folder -a account_name -c container-name -t target-container -f folder_name\n\n\nTo move the folder \nfolder_name\n, and set the storage tier to \nCool\n\n\nAzureMove folder -a account_name -c container-name -t target-container -f folder_name -s Cool\n\n\nTo move the folder \nfolder_name\n nested in folder \noutputs\n\n\nAzureMove folder -a account_name -c container-name -t target-container -f outputs/folder_name\n\n\nTo move the folder \nfolder_name\n nested in folder \noutputs\n to the root of the source container\n\n\nAzureMove folder -a account_name -c container-name -t container-name -f outputs/folder_name -r \"\"\n\n\nTo move the folder \nfolder_name\n nested in folder \noutputs\n to folder \nresults\n in the source container\n\n\nAzureMove folder -a account_name -c container-name -t container-name -f outputs/folder_name -r results\n\n\nTo move the folder \nfolder_name\n nested in folder \noutputs\n to the root of the target container\n\n\nAzureMove folder -a account_name -c container-name -t target-container -f outputs/folder_name -r \"\"\n\n\nTo move the folder \nfolder_name\n nested in folder \noutputs\n to folder \nresults\n in the target container\n\n\nAzureMove folder -a account_name -c container-name -t target-container -f outputs/folder_name -r results\n\n\nUsage\n\n\nusage: AzureMove folder [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] -t TARGET_CONTAINER [-r RESET_PATH]\n                        [-s STORAGE_TIER] -f FOLDER\n\nMove a folder within Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -t TARGET_CONTAINER, --target_container TARGET_CONTAINER\n                        The target container to which the container/file/folder is to be moved (this can be the same as the container_name if you want to move a file/folder within a container\n  -r RESET_PATH, --reset_path RESET_PATH\n                        Set the path of the container/file/folder within a folder in the target container e.g. sequence_data/220202-m05722. If you want to place it directly in the container without any nesting, use or ''\n  -s STORAGE_TIER, --storage_tier STORAGE_TIER\n                        Set the storage tier for the container/file/folder to be moved. Options are \nHot\n, \nCool\n, and \nArchive\n. Default is Hot\n  -f FOLDER, --folder FOLDER\n                        Name of folder to move in Azure storage. e.g. InterOp", 
            "title": "Move"
        }, 
        {
            "location": "/move/#azuremove", 
            "text": "Move containers, files, or folders within your Azure storage account.  Choose either the  container ,  file , or   folder  functionality  General usage  usage: AzureMove [-h] {container,file,folder} ...\n\nMove containers, files, or folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nAvailable functionality:\n  {container,file,folder}\n    container           Move a container in Azure storage\n    file                Move a file within Azure storage \n    folder              Move a folder within Azure storage  AzureMove container  Move a container within your Azure storage account  Required arguments:   container name  account name   Optional arguments:   target container: name of the container into which the container is to be moved  path to store the container: nest the container within the target container  verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info  storage tier: set the storage tier of the file in Azure storage. Options are Hot, Cool, Archive. Default is Hot   Example commands:  These commands will use  container-name  as the name of the container,  target-container  as the name of the target container, and  account_name  as the name of the storage account  To perform a basic move (this also renames a container):  AzureMove container -a account_name -c container-name -t target-container  To move a container, and set the storage tier to  Cool  AzureMove container -a account_name -c container-name -t target-container -s Cool  To move a container and nest it into folder  outputs :  AzureMove container -a account_name -c container-name -t target-container -r outputs  Usage  usage: AzureMove container [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] -t TARGET_CONTAINER [-r RESET_PATH]\n                           [-s STORAGE_TIER]\n\nMove a container in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -t TARGET_CONTAINER, --target_container TARGET_CONTAINER\n                        The target container to which the container/file/folder is to be moved (this can be the same as the container_name if you want to move a file/folder within a container\n  -r RESET_PATH, --reset_path RESET_PATH\n                        Set the path of the container/file/folder within a folder in the target container e.g. sequence_data/220202-m05722. If you want to place it directly in the container without any nesting, use or ''\n  -s STORAGE_TIER, --storage_tier STORAGE_TIER\n                        Set the storage tier for the container/file/folder to be moved. Options are  Hot ,  Cool , and  Archive . Default is Hot  AzureMove file  Move a file within your Azure storage account  Required arguments:   container name  account name  file name   Optional arguments:   target container: name of the container into which the container is to be moved  path to store the container: nest the container within the target container  verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info  storage tier: set the storage tier of the file in Azure storage. Options are Hot, Cool, Archive. Default is Hot   Example commands:  These commands will use  container-name  as the name of the container,  target-container  as the name of the target container, and  account_name  as the name of the storage account  To move the file  file_name.gz  AzureMove file -a account_name -c container-name -t target-container -f file_name.gz  To move the file  file_name.gz , and set the storage tier to  Cool  AzureMove file -a account_name -c container-name -t target-container -f file_name.gz -s Cool  To move the file  file_name.gz  nested in folder  outputs  AzureMove file -a account_name -c container-name -t target-container -f outputs/file_name.gz  To move the file  file_name.gz  nested in folder  outputs  to the root of the source container  AzureMove file -a account_name -c container-name -t container-name -f outputs/file_name.gz -r \"\"  To move the file  file_name.gz  nested in folder  outputs  to folder  results  in the source container  AzureMove file -a account_name -c container-name -t container-name -f outputs/file_name.gz -r results  To move the file  file_name.gz  nested in folder  outputs  to the root of the target container  AzureMove file -a account_name -c container-name -t target-container -f outputs/file_name.gz -r \"\"  To move the file  file_name.gz  nested in folder  outputs  to folder  results  in the target container  AzureMove file -a account_name -c container-name -t target-container -f outputs/file_name.gz -r results  Usage  usage: AzureMove file [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] -t TARGET_CONTAINER [-r RESET_PATH]\n                      [-s STORAGE_TIER] -f FILE\n\nMove a file within Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -t TARGET_CONTAINER, --target_container TARGET_CONTAINER\n                        The target container to which the container/file/folder is to be moved (this can be the same as the container_name if you want to move a file/folder within a container\n  -r RESET_PATH, --reset_path RESET_PATH\n                        Set the path of the container/file/folder within a folder in the target container e.g. sequence_data/220202-m05722. If you want to place it directly in the container without any nesting, use or ''\n  -s STORAGE_TIER, --storage_tier STORAGE_TIER\n                        Set the storage tier for the container/file/folder to be moved. Options are  Hot ,  Cool , and  Archive . Default is Hot\n  -f FILE, --file FILE  Name of blob file to move in Azure storage. e.g. 2022-SEQ-0001_S1_L001_R1_001.fastq.gz  AzureMove folder  Move a folder within your Azure storage account  Required arguments:   container name  account name  folder name   Optional arguments:   target container: name of the container into which the container is to be moved  path to store the container: nest the container within the target container  verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info  storage tier: set the storage tier of the file in Azure storage. Options are Hot, Cool, Archive. Default is Hot   Example commands:  These commands will use  container-name  as the name of the container,  target-container  as the name of the target container, and  account_name  as the name of the storage account  To move the folder  folder_name  AzureMove folder -a account_name -c container-name -t target-container -f folder_name  To move the folder  folder_name , and set the storage tier to  Cool  AzureMove folder -a account_name -c container-name -t target-container -f folder_name -s Cool  To move the folder  folder_name  nested in folder  outputs  AzureMove folder -a account_name -c container-name -t target-container -f outputs/folder_name  To move the folder  folder_name  nested in folder  outputs  to the root of the source container  AzureMove folder -a account_name -c container-name -t container-name -f outputs/folder_name -r \"\"  To move the folder  folder_name  nested in folder  outputs  to folder  results  in the source container  AzureMove folder -a account_name -c container-name -t container-name -f outputs/folder_name -r results  To move the folder  folder_name  nested in folder  outputs  to the root of the target container  AzureMove folder -a account_name -c container-name -t target-container -f outputs/folder_name -r \"\"  To move the folder  folder_name  nested in folder  outputs  to folder  results  in the target container  AzureMove folder -a account_name -c container-name -t target-container -f outputs/folder_name -r results  Usage  usage: AzureMove folder [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] -t TARGET_CONTAINER [-r RESET_PATH]\n                        [-s STORAGE_TIER] -f FOLDER\n\nMove a folder within Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -t TARGET_CONTAINER, --target_container TARGET_CONTAINER\n                        The target container to which the container/file/folder is to be moved (this can be the same as the container_name if you want to move a file/folder within a container\n  -r RESET_PATH, --reset_path RESET_PATH\n                        Set the path of the container/file/folder within a folder in the target container e.g. sequence_data/220202-m05722. If you want to place it directly in the container without any nesting, use or ''\n  -s STORAGE_TIER, --storage_tier STORAGE_TIER\n                        Set the storage tier for the container/file/folder to be moved. Options are  Hot ,  Cool , and  Archive . Default is Hot\n  -f FOLDER, --folder FOLDER\n                        Name of folder to move in Azure storage. e.g. InterOp", 
            "title": "AzureMove"
        }, 
        {
            "location": "/sas_url/", 
            "text": "AzureSAS\n\n\nCreate shared access signatures (SAS) URLs for containers, files, folders in your Azure storage account.\n\n\nNote that each file in a container/folder has to be downloaded separately, so if there are 1000 files in the container, 1000 SAS URLs will be provided\n\n\nChoose either the \ncontainer\n, \nfile\n, or  \nfolder\n functionality\n\n\nGeneral usage\n\n\nusage: AzureSAS [-h] {container,file,folder} ...\n\nCreate shared access signatures (SAS) for containers/files/folders from Azure storage.\nNote that each file in the container/folder has to be downloaded separately, so if\nthere are 1000 files in the container, 1000 SAS will be provided\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nAvailable functionality:\n  {container,file,folder}\n    container           Create SAS for all files in a container in Azure storage\n    file                Create a SAS for a file in Azure storage\n    folder              Create SAS for all files in a folder in Azure storage\n\n\n\n\nAzureSAS container\n\n\nCreate SAS URLs for all files in a container in your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\n\n\nOptional arguments:\n\n\n\n\noutput file: file in which the SAS URLs are to be written. Default is \nsas.txt\n in your current working directory\n\n\nexpiry: the number of days the SAS URL with be valid. Minimum is 1, maximum is 365. Default is 10\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nExample commands:\n\n\nThese commands will use \ncontainer-name\n as the name of the container, and \naccount_name\n as the name of the storage account\n\n\nTo create SAS URLs with default settings:\n\n\nAzureSAS container -a account_name -c container-name\n\n\nTo create SAS URLs with an expiry of 15 days:\n\n\nAzureSAS container -a account_name -c container-name -e 15\n\n\nTo create SAS URLs, and save them to the file \nsas_urls.txt\n in your current working directory:\n\n\nAzureSAS container -a account_name -c container-name -o sas_urls.txt\n\n\nTo create SAS URLs, and save them to the file \nsas_urls.txt\n nested in folder \noutputs\n in your current working directory:\n\n\nAzureSAS container -a account_name -c container-name -o outputs/sas_urls.txt\n\n\nUsage\n\n\nusage: AzureSAS container [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] [-e EXPIRY] [-o OUTPUT_FILE]\n\nCreate SAS URLs for all files in a container in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -e EXPIRY, --expiry EXPIRY\n                        The number of days that the SAS URL will be valid. The minimum is 1, and the maximum is 365. The default is 10.\n  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n                        Name and path of file in which the SAS URLs are to be saved. Default is $CWD/sas.txt\n\n\n\n\nAzureSAS file\n\n\nCreate a SAS URL for a file in a container in your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nfile name\n\n\n\n\nOptional arguments:\n\n\n\n\noutput file: file in which the SAS URLs are to be written. Default is \nsas.txt\n in your current working directory\n\n\nexpiry: the number of days the SAS URL with be valid. Minimum is 1, maximum is 365. Default is 10\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nExample commands:\n\n\nThese commands will use \ncontainer-name\n as the name of the container, and \naccount_name\n as the name of the storage account\n\n\nTo create a SAS URL for file \nfile_name.gz\n with default settings:\n\n\nAzureSAS file -a account_name -c container-name -f file_name.gz\n\n\nTo create a SAS URL for file \nfile_name.gz\n nested in folder \noutputs\n with default settings:\n\n\nAzureSAS file -a account_name -c container-name -f outputs/file_name.gz\n\n\nTo create a SAS URL for file \nfile_name.gz\n with an expiry of 15 days:\n\n\nAzureSAS file -a account_name -c container-name f file_name.gz -e 15\n\n\nTo create a SAS URL for file \nfile_name.gz\n, and save it to the file \nsas_urls.txt\n in your current working directory:\n\n\nAzureSAS file -a account_name -c container-name -f file_name.gz -o sas_urls.txt\n\n\nTo create a SAS URL for file \nfile_name.gz\n, and save it to the file \nsas_urls.txt\n nested in folder \noutputs\n in your current working directory:\n\n\nAzureSAS file -a account_name -c container-name -f file_name.gz -o outputs/sas_urls.txt\n\n\nUsage\n\n\nusage: AzureSAS file [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] [-e EXPIRY] [-o OUTPUT_FILE] -f FILE\n\nCreate a SAS URL for a file in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -e EXPIRY, --expiry EXPIRY\n                        The number of days that the SAS URL will be valid. The minimum is 1, and the maximum is 365. The default is 10.\n  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n                        Name and path of file in which the SAS URLs are to be saved. Default is $CWD/sas.txt\n  -f FILE, --file FILE  Path of file in Azure storage from which a SAS URL is to be created. e.g. 2022-SEQ-0001_S1_L001_R1_001.fastq.gz\n\n\n\n\nAzureSAS folder\n\n\nCreate SAS URLs for all files in a folder in your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nfolder name\n\n\n\n\nOptional arguments:\n\n\n\n\noutput file: file in which the SAS URLs are to be written. Default is \nsas.txt\n in your current working directory\n\n\nexpiry: the number of days the SAS URL with be valid. Minimum is 1, maximum is 365. Default is 10\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nExample commands:\n\n\nThese commands will use \ncontainer-name\n as the name of the container, and \naccount_name\n as the name of the storage account\n\n\nTo create SAS URLs for all files in folder \nfolder_name\n with default settings:\n\n\nAzureSAS folder -a account_name -c container-name -f folder_name\n\n\nTo create SAS URLs for all files in folder \nfolder_name\n nested in folder \noutputs\n with default settings:\n\n\nAzureSAS folder -a account_name -c container-name -f outputs/folder_name\n\n\nTo create SAS URLs for all files in folder \nfolder_name\n with an expiry of 15 days:\n\n\nAzureSAS folder -a account_name -c container-name f folder_name -e 15\n\n\nTo create SAS URLs for all files in folder \nfolder_name\n, and save them to the file \nsas_urls.txt\n in your current working directory:\n\n\nAzureSAS folder -a account_name -c container-name -f folder_name -o sas_urls.txt\n\n\nTo create SAS URLs for all files in folder \nfolder_name\n, and save them to the file \nsas_urls.txt\n nested in folder \noutputs\n in your current working directory:\n\n\nAzureSAS folder -a account_name -c container-name -f folder_name -o outputs/sas_urls.txt\n\n\nUsage\n\n\nusage: AzureSAS folder [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] [-e EXPIRY] [-o OUTPUT_FILE] -f FOLDER\n\nCreate SAS URLs for all files in a folder in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -e EXPIRY, --expiry EXPIRY\n                        The number of days that the SAS URL will be valid. The minimum is 1, and the maximum is 365. The default is 10.\n  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n                        Name and path of file in which the SAS URLs are to be saved. Default is $CWD/sas.txt\n  -f FOLDER, --folder FOLDER\n                        Name of the folder for which SAS URLs are to be created for all files. e.g. InterOp", 
            "title": "Sas url"
        }, 
        {
            "location": "/sas_url/#azuresas", 
            "text": "Create shared access signatures (SAS) URLs for containers, files, folders in your Azure storage account.  Note that each file in a container/folder has to be downloaded separately, so if there are 1000 files in the container, 1000 SAS URLs will be provided  Choose either the  container ,  file , or   folder  functionality  General usage  usage: AzureSAS [-h] {container,file,folder} ...\n\nCreate shared access signatures (SAS) for containers/files/folders from Azure storage.\nNote that each file in the container/folder has to be downloaded separately, so if\nthere are 1000 files in the container, 1000 SAS will be provided\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nAvailable functionality:\n  {container,file,folder}\n    container           Create SAS for all files in a container in Azure storage\n    file                Create a SAS for a file in Azure storage\n    folder              Create SAS for all files in a folder in Azure storage  AzureSAS container  Create SAS URLs for all files in a container in your Azure storage account  Required arguments:   container name  account name   Optional arguments:   output file: file in which the SAS URLs are to be written. Default is  sas.txt  in your current working directory  expiry: the number of days the SAS URL with be valid. Minimum is 1, maximum is 365. Default is 10  verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Example commands:  These commands will use  container-name  as the name of the container, and  account_name  as the name of the storage account  To create SAS URLs with default settings:  AzureSAS container -a account_name -c container-name  To create SAS URLs with an expiry of 15 days:  AzureSAS container -a account_name -c container-name -e 15  To create SAS URLs, and save them to the file  sas_urls.txt  in your current working directory:  AzureSAS container -a account_name -c container-name -o sas_urls.txt  To create SAS URLs, and save them to the file  sas_urls.txt  nested in folder  outputs  in your current working directory:  AzureSAS container -a account_name -c container-name -o outputs/sas_urls.txt  Usage  usage: AzureSAS container [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] [-e EXPIRY] [-o OUTPUT_FILE]\n\nCreate SAS URLs for all files in a container in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -e EXPIRY, --expiry EXPIRY\n                        The number of days that the SAS URL will be valid. The minimum is 1, and the maximum is 365. The default is 10.\n  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n                        Name and path of file in which the SAS URLs are to be saved. Default is $CWD/sas.txt  AzureSAS file  Create a SAS URL for a file in a container in your Azure storage account  Required arguments:   container name  account name  file name   Optional arguments:   output file: file in which the SAS URLs are to be written. Default is  sas.txt  in your current working directory  expiry: the number of days the SAS URL with be valid. Minimum is 1, maximum is 365. Default is 10  verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Example commands:  These commands will use  container-name  as the name of the container, and  account_name  as the name of the storage account  To create a SAS URL for file  file_name.gz  with default settings:  AzureSAS file -a account_name -c container-name -f file_name.gz  To create a SAS URL for file  file_name.gz  nested in folder  outputs  with default settings:  AzureSAS file -a account_name -c container-name -f outputs/file_name.gz  To create a SAS URL for file  file_name.gz  with an expiry of 15 days:  AzureSAS file -a account_name -c container-name f file_name.gz -e 15  To create a SAS URL for file  file_name.gz , and save it to the file  sas_urls.txt  in your current working directory:  AzureSAS file -a account_name -c container-name -f file_name.gz -o sas_urls.txt  To create a SAS URL for file  file_name.gz , and save it to the file  sas_urls.txt  nested in folder  outputs  in your current working directory:  AzureSAS file -a account_name -c container-name -f file_name.gz -o outputs/sas_urls.txt  Usage  usage: AzureSAS file [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] [-e EXPIRY] [-o OUTPUT_FILE] -f FILE\n\nCreate a SAS URL for a file in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -e EXPIRY, --expiry EXPIRY\n                        The number of days that the SAS URL will be valid. The minimum is 1, and the maximum is 365. The default is 10.\n  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n                        Name and path of file in which the SAS URLs are to be saved. Default is $CWD/sas.txt\n  -f FILE, --file FILE  Path of file in Azure storage from which a SAS URL is to be created. e.g. 2022-SEQ-0001_S1_L001_R1_001.fastq.gz  AzureSAS folder  Create SAS URLs for all files in a folder in your Azure storage account  Required arguments:   container name  account name  folder name   Optional arguments:   output file: file in which the SAS URLs are to be written. Default is  sas.txt  in your current working directory  expiry: the number of days the SAS URL with be valid. Minimum is 1, maximum is 365. Default is 10  verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Example commands:  These commands will use  container-name  as the name of the container, and  account_name  as the name of the storage account  To create SAS URLs for all files in folder  folder_name  with default settings:  AzureSAS folder -a account_name -c container-name -f folder_name  To create SAS URLs for all files in folder  folder_name  nested in folder  outputs  with default settings:  AzureSAS folder -a account_name -c container-name -f outputs/folder_name  To create SAS URLs for all files in folder  folder_name  with an expiry of 15 days:  AzureSAS folder -a account_name -c container-name f folder_name -e 15  To create SAS URLs for all files in folder  folder_name , and save them to the file  sas_urls.txt  in your current working directory:  AzureSAS folder -a account_name -c container-name -f folder_name -o sas_urls.txt  To create SAS URLs for all files in folder  folder_name , and save them to the file  sas_urls.txt  nested in folder  outputs  in your current working directory:  AzureSAS folder -a account_name -c container-name -f folder_name -o outputs/sas_urls.txt  Usage  usage: AzureSAS folder [-h] -c CONTAINER_NAME -a ACCOUNT_NAME [-v VERBOSITY] [-e EXPIRY] [-o OUTPUT_FILE] -f FOLDER\n\nCreate SAS URLs for all files in a folder in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -e EXPIRY, --expiry EXPIRY\n                        The number of days that the SAS URL will be valid. The minimum is 1, and the maximum is 365. The default is 10.\n  -o OUTPUT_FILE, --output_file OUTPUT_FILE\n                        Name and path of file in which the SAS URLs are to be saved. Default is $CWD/sas.txt\n  -f FOLDER, --folder FOLDER\n                        Name of the folder for which SAS URLs are to be created for all files. e.g. InterOp", 
            "title": "AzureSAS"
        }, 
        {
            "location": "/set_tier/", 
            "text": "AzureTier\n\n\nSet the storage tier (\nHot\n, \nCool\n, or \nArchive\n) for containers, files, or folders in your Azure storage account\n\n\nChoose either the \ncontainer\n, \nfile\n, or  \nfolder\n functionality\n\n\nGeneral usage\n\n\nusage: AzureTier [-h] {container,file,folder} ...\n\nSet the storage tier of containers/files/folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nAvailable functionality:\n  {container,file,folder}\n    container           Change the storage tier of a container in Azure storage\n    file                Change the storage tier of a file in Azure storage\n    folder              Change the storage tier of a folder in Azure storage\n\n\n\n\nAzureTier container\n\n\nSet the storage tier of a container in your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nstorage tier\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nExample command:\n\n\nThese commands will use \ncontainer-name\n as the name of the container and \naccount_name\n as the name of the storage account\n\n\nTo change the storage tier of a container to \nCool\n\n\nAzureTier -a account_name -c container-name -s Cool\n\n\nUsage\n\n\nusage: AzureTier container [-h] -c CONTAINER_NAME -a ACCOUNT_NAME\n                           [-v VERBOSITY] -s STORAGE_TIER\n\nChange the storage tier of a container in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -s STORAGE_TIER, --storage_tier STORAGE_TIER\n                        Set the storage tier for a container/file/folder. Options are \nHot\n, \nCool\n, and \nArchive\n\n\n\n\n\nAzureTier file\n\n\nSet the storage tier of a file in your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nfile name\n\n\nstorage tier\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nExample command:\n\n\nThese commands will use \ncontainer-name\n as the name of the container and \naccount_name\n as the name of the storage account\n\n\nTo change the storage tier of the file \nfile_name.gz\n to \nArchive\n\n\nAzureTier -a account_name -c container-name -f file_name.gz -s Archive\n\n\nUsage\n\n\nusage: AzureTier file [-h] -c CONTAINER_NAME -a ACCOUNT_NAME\n                      [-v VERBOSITY] -s STORAGE_TIER -f FILE\n\nChange the storage tier of a file in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -s STORAGE_TIER, --storage_tier STORAGE_TIER\n                        Set the storage tier for a container/file/folder. Options are \nHot\n, \nCool\n, and \nArchive\n\n  -f FILE, --file FILE  Name of file in Azure storage that will have its storage tier sete.g. 220202-m05722/2022-SEQ-0001_S1_L001_R1_001.fastq.gz\n\n\n\n\nAzureTier folder\n\n\nSet the storage tier of a folder in your Azure storage account\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nfolder name\n\n\nstorage tier\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\n\n\nExample command:\n\n\nThese commands will use \ncontainer-name\n as the name of the container and \naccount_name\n as the name of the storage account\n\n\nTo change the storage tier of the folder \nresults/folder_name\n to \nHot\n\n\nAzureTier -a account_name -c container-name -f results/folder_name -s Hot\n\n\nUsage\n\n\nusage: AzureTier folder [-h] -c CONTAINER_NAME -a ACCOUNT_NAME\n                        [-v VERBOSITY] -s STORAGE_TIER -f FOLDER\n\nChange the storage tier of a folder in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -s STORAGE_TIER, --storage_tier STORAGE_TIER\n                        Set the storage tier for a container/file/folder. Options are \nHot\n, \nCool\n, and \nArchive\n\n  -f FOLDER, --folder FOLDER\n                        Name of the folder in Azure storage that will have its storage tier set e.g. InterOp", 
            "title": "Set tier"
        }, 
        {
            "location": "/set_tier/#azuretier", 
            "text": "Set the storage tier ( Hot ,  Cool , or  Archive ) for containers, files, or folders in your Azure storage account  Choose either the  container ,  file , or   folder  functionality  General usage  usage: AzureTier [-h] {container,file,folder} ...\n\nSet the storage tier of containers/files/folders in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nAvailable functionality:\n  {container,file,folder}\n    container           Change the storage tier of a container in Azure storage\n    file                Change the storage tier of a file in Azure storage\n    folder              Change the storage tier of a folder in Azure storage  AzureTier container  Set the storage tier of a container in your Azure storage account  Required arguments:   container name  account name  storage tier   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Example command:  These commands will use  container-name  as the name of the container and  account_name  as the name of the storage account  To change the storage tier of a container to  Cool  AzureTier -a account_name -c container-name -s Cool  Usage  usage: AzureTier container [-h] -c CONTAINER_NAME -a ACCOUNT_NAME\n                           [-v VERBOSITY] -s STORAGE_TIER\n\nChange the storage tier of a container in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -s STORAGE_TIER, --storage_tier STORAGE_TIER\n                        Set the storage tier for a container/file/folder. Options are  Hot ,  Cool , and  Archive   AzureTier file  Set the storage tier of a file in your Azure storage account  Required arguments:   container name  account name  file name  storage tier   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Example command:  These commands will use  container-name  as the name of the container and  account_name  as the name of the storage account  To change the storage tier of the file  file_name.gz  to  Archive  AzureTier -a account_name -c container-name -f file_name.gz -s Archive  Usage  usage: AzureTier file [-h] -c CONTAINER_NAME -a ACCOUNT_NAME\n                      [-v VERBOSITY] -s STORAGE_TIER -f FILE\n\nChange the storage tier of a file in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -s STORAGE_TIER, --storage_tier STORAGE_TIER\n                        Set the storage tier for a container/file/folder. Options are  Hot ,  Cool , and  Archive \n  -f FILE, --file FILE  Name of file in Azure storage that will have its storage tier sete.g. 220202-m05722/2022-SEQ-0001_S1_L001_R1_001.fastq.gz  AzureTier folder  Set the storage tier of a folder in your Azure storage account  Required arguments:   container name  account name  folder name  storage tier   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info   Example command:  These commands will use  container-name  as the name of the container and  account_name  as the name of the storage account  To change the storage tier of the folder  results/folder_name  to  Hot  AzureTier -a account_name -c container-name -f results/folder_name -s Hot  Usage  usage: AzureTier folder [-h] -c CONTAINER_NAME -a ACCOUNT_NAME\n                        [-v VERBOSITY] -s STORAGE_TIER -f FOLDER\n\nChange the storage tier of a folder in Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                        Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v VERBOSITY, --verbosity VERBOSITY\n                        Set the logging level. Options are debug, info, warning, error, and critical. Default is info.\n  -s STORAGE_TIER, --storage_tier STORAGE_TIER\n                        Set the storage tier for a container/file/folder. Options are  Hot ,  Cool , and  Archive \n  -f FOLDER, --folder FOLDER\n                        Name of the folder in Azure storage that will have its storage tier set e.g. InterOp", 
            "title": "AzureTier"
        }, 
        {
            "location": "/upload/", 
            "text": "AzureUpload\n\n\nAzureUpload allows you to upload a file or a folder to your Azure storage account.\n\n\nChoose either the \nfile\n or \nfolder\n functionality\n\n\nGeneral Usage\n\n\nusage: AzureUpload [-h] {file,folder} ...\n\nUpload files or folders to Azure storage\n\noptional arguments:\n  -h, --help     show this help message and exit\n\nAvailable functionality:\n  {file,folder}\n    file         Upload a file to Azure storage\n    folder       Upload a folder to Azure storage\n\n\n\n\nAzureUpload file\n\n\nUpload a single file to your Azure storage account. \n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nname and path of file to upload\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\npath to store the file: change the folder structure of the file in Azure storage compared to your local system\n\n\nstorage tier: set the storage tier of the file in Azure storage. Options are Hot, Cool, Archive. Default is Hot\n\n\n\n\nExample commands:\n\n\nThese commands will use \ncontainer-name\n as the name of the container, and \naccount_name\n as the name of the storage account\n\n\nTo upload the file \nfile_name.gz\n in your current working directory:\n\n\nAzureUpload file -a account_name -c container-name -f file_name.gz\n\n\nTo upload the file \nfile_name.gz\n in your current working directory and set the storage tier to \nCool\n:\n\n\nAzureUpload file -a account_name -c container-name -f file_name.gz -s Cool\n\n\nTo upload the file \nfile_name.gz\n nested in the folder \noutputs\n in your current working directory:\n\n\nAzureUpload file -a account_name -c container-name -f outputs/file_name.gz\n\n\nTo upload the file \nfile_name.gz\n nested in the folder \noutputs\n in your current working directory to the root of the container:\n\n\nAzureUpload file -a account_name -c container-name -f outputs/file_name.gz -r \"\"\n\n\nTo upload the file \nfile_name.gz\n nested in the folder \noutputs\n in your current working directory to the folder \nresults/parsing\n in the container:\n\n\nAzureUpload file -a account_name -c container-name -f outputs/file_name.gz -r results/parsing\n\n\nTo upload the file \n/home/users/account/files/file_name.gz\n to path \ndata\n:\n\n\nAzureUpload file -a account_name -c container-name -f /home/users/account/files/file_name.gz -r data\n\n\nTo upload that same file to the root of the container:\n\n\nAzureUpload file -a account_name -c container-name -f /home/users/account/files/file_name.gz -r \"\"\n\n\nTo retain the path of the file:\n\n\nAzureUpload file -a account_name -c container-name -f /home/users/account/files/file_name.gz\n\n\nUsage\n\n\nusage: AzureUpload file [-h] -c CONTAINER_NAME -a ACCOUNT_NAME\n                        [-v {debug,info,warning,error,critical}] [-r RESET_PATH]\n                        [-s {Hot,Cool,Archive}] -f FILE\n\nUpload a file to Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                         Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v {debug,info,warning,error,critical}, --verbosity {debug,info,warning,error,critical}\n                        Set the logging level. Default is info.\n  -r RESET_PATH, --reset_path RESET_PATH\n                        Set the path of the file/folder within a folder in the target container e.g. sequence_data/220202-m05722. If you want to place it directly in the container without any nesting, use \n or ''\n  -s {Hot,Cool,Archive}, --storage_tier {Hot,Cool,Archive}\n                        Set the storage tier for the file/folder to be uploaded. Options are \nHot\n, \nCool\n, and \nArchive\n. Default is Hot\n  -f FILE, --file FILE  Name and path of the file to upload to Azure storage.e.g. /mnt/sequences/220202_M05722/2022-SEQ-0001_S1_L001_R1_001.fastq.gz\n\n\n\n\nAzureUpload folder\n\n\nUpload a single folder (and its contents) to your Azure storage account. Note that having a trailing slash ('/') at the end of your folder name will not affect the script\n\n\nRequired arguments:\n\n\n\n\ncontainer name\n\n\naccount name\n\n\nname and path of folder to upload\n\n\n\n\nOptional arguments:\n\n\n\n\nverbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info\n\n\npath to store the file: change the folder structure of the file in Azure storage compared to your local system\n\n\nstorage tier: set the storage tier of the file in Azure storage. Options are Hot, Cool, Archive. Default is Hot\n\n\n\n\nExample commands:\n\n\nThese commands will use \ncontainer-name\n as the name of the container, and \naccount_name\n as the name of the storage account\n\n\nTo upload the folder \nfolder_name\n in your current working directory:\n\n\nAzureUpload folder -a account_name -c container-name -f folder_name\n\n\nTo upload the folder \nfolder_name\n in your current working directory and set the storage tier to \nCool\n:\n\n\nAzureUpload folder -a account_name -c container-name -f folder_name -s Cool\n\n\nTo upload the folder \nfolder_name\n nested in the folder \noutputs\n in your current working directory:\n\n\nAzureUpload folder -a account_name -c container-name -f outputs/folder_name\n\n\nTo upload the folder \nfolder_name\n nested in the folder \noutputs\n in your current working directory to the root of the container:\n\n\nAzureUpload folder -a account_name -c container-name -f outputs/file_name.gz -r \"\"\n\n\nTo upload the folder \nfolder_name\n nested in the folder \noutputs\n in your current working directory to the folder \nresults/parsing\n in the container:\n\n\nAzureUpload folder -a account_name -c container-name -f outputs/folder_namw -r results/parsing\n\n\nTo upload the folder \n/home/users/account/files/\n to path \ndata\n:\n\n\nAzureUpload folder -a account_name -c container-name -f /home/users/account/files/ -r data\n\n\nTo upload that same folder to the root of the container:\n\n\nAzureUpload folder -a account_name -c container-name -f /home/users/account/files -r \"\"\n\n\nTo retain the path of the folder:\n\n\nAzureUpload folder -a account_name -c container-name -f /home/users/account/files/\n\n\nUsage\n\n\nusage: AzureUpload folder [-h] -c CONTAINER_NAME -a ACCOUNT_NAME\n                          [-v {debug,info,warning,error,critical}] [-r RESET_PATH]\n                          [-s {Hot,Cool,Archive}] -f FOLDER\n\nUpload a folder to Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                         Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v {debug,info,warning,error,critical}, --verbosity {debug,info,warning,error,critical}\n                        Set the logging level. Default is info.\n  -r RESET_PATH, --reset_path RESET_PATH\n                        Set the path of the file/folder within a folder in the target container e.g. sequence_data/220202-m05722. If you want to place it directly in the container without any nesting, use \n or ''\n  -s {Hot,Cool,Archive}, --storage_tier {Hot,Cool,Archive}\n                        Set the storage tier for the file/folder to be uploaded. Options are \nHot\n, \nCool\n, and \nArchive\n. Default is Hot\n  -f FOLDER, --folder FOLDER\n                        Name and path of the folder to upload to Azure storage.e.g. /mnt/sequences/220202_M05722/", 
            "title": "Upload"
        }, 
        {
            "location": "/upload/#azureupload", 
            "text": "AzureUpload allows you to upload a file or a folder to your Azure storage account.  Choose either the  file  or  folder  functionality  General Usage  usage: AzureUpload [-h] {file,folder} ...\n\nUpload files or folders to Azure storage\n\noptional arguments:\n  -h, --help     show this help message and exit\n\nAvailable functionality:\n  {file,folder}\n    file         Upload a file to Azure storage\n    folder       Upload a folder to Azure storage  AzureUpload file  Upload a single file to your Azure storage account.   Required arguments:   container name  account name  name and path of file to upload   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info  path to store the file: change the folder structure of the file in Azure storage compared to your local system  storage tier: set the storage tier of the file in Azure storage. Options are Hot, Cool, Archive. Default is Hot   Example commands:  These commands will use  container-name  as the name of the container, and  account_name  as the name of the storage account  To upload the file  file_name.gz  in your current working directory:  AzureUpload file -a account_name -c container-name -f file_name.gz  To upload the file  file_name.gz  in your current working directory and set the storage tier to  Cool :  AzureUpload file -a account_name -c container-name -f file_name.gz -s Cool  To upload the file  file_name.gz  nested in the folder  outputs  in your current working directory:  AzureUpload file -a account_name -c container-name -f outputs/file_name.gz  To upload the file  file_name.gz  nested in the folder  outputs  in your current working directory to the root of the container:  AzureUpload file -a account_name -c container-name -f outputs/file_name.gz -r \"\"  To upload the file  file_name.gz  nested in the folder  outputs  in your current working directory to the folder  results/parsing  in the container:  AzureUpload file -a account_name -c container-name -f outputs/file_name.gz -r results/parsing  To upload the file  /home/users/account/files/file_name.gz  to path  data :  AzureUpload file -a account_name -c container-name -f /home/users/account/files/file_name.gz -r data  To upload that same file to the root of the container:  AzureUpload file -a account_name -c container-name -f /home/users/account/files/file_name.gz -r \"\"  To retain the path of the file:  AzureUpload file -a account_name -c container-name -f /home/users/account/files/file_name.gz  Usage  usage: AzureUpload file [-h] -c CONTAINER_NAME -a ACCOUNT_NAME\n                        [-v {debug,info,warning,error,critical}] [-r RESET_PATH]\n                        [-s {Hot,Cool,Archive}] -f FILE\n\nUpload a file to Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                         Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v {debug,info,warning,error,critical}, --verbosity {debug,info,warning,error,critical}\n                        Set the logging level. Default is info.\n  -r RESET_PATH, --reset_path RESET_PATH\n                        Set the path of the file/folder within a folder in the target container e.g. sequence_data/220202-m05722. If you want to place it directly in the container without any nesting, use   or ''\n  -s {Hot,Cool,Archive}, --storage_tier {Hot,Cool,Archive}\n                        Set the storage tier for the file/folder to be uploaded. Options are  Hot ,  Cool , and  Archive . Default is Hot\n  -f FILE, --file FILE  Name and path of the file to upload to Azure storage.e.g. /mnt/sequences/220202_M05722/2022-SEQ-0001_S1_L001_R1_001.fastq.gz  AzureUpload folder  Upload a single folder (and its contents) to your Azure storage account. Note that having a trailing slash ('/') at the end of your folder name will not affect the script  Required arguments:   container name  account name  name and path of folder to upload   Optional arguments:   verbosity: set the logging level. Options are debug,info,warning,error,critical. Default is info  path to store the file: change the folder structure of the file in Azure storage compared to your local system  storage tier: set the storage tier of the file in Azure storage. Options are Hot, Cool, Archive. Default is Hot   Example commands:  These commands will use  container-name  as the name of the container, and  account_name  as the name of the storage account  To upload the folder  folder_name  in your current working directory:  AzureUpload folder -a account_name -c container-name -f folder_name  To upload the folder  folder_name  in your current working directory and set the storage tier to  Cool :  AzureUpload folder -a account_name -c container-name -f folder_name -s Cool  To upload the folder  folder_name  nested in the folder  outputs  in your current working directory:  AzureUpload folder -a account_name -c container-name -f outputs/folder_name  To upload the folder  folder_name  nested in the folder  outputs  in your current working directory to the root of the container:  AzureUpload folder -a account_name -c container-name -f outputs/file_name.gz -r \"\"  To upload the folder  folder_name  nested in the folder  outputs  in your current working directory to the folder  results/parsing  in the container:  AzureUpload folder -a account_name -c container-name -f outputs/folder_namw -r results/parsing  To upload the folder  /home/users/account/files/  to path  data :  AzureUpload folder -a account_name -c container-name -f /home/users/account/files/ -r data  To upload that same folder to the root of the container:  AzureUpload folder -a account_name -c container-name -f /home/users/account/files -r \"\"  To retain the path of the folder:  AzureUpload folder -a account_name -c container-name -f /home/users/account/files/  Usage  usage: AzureUpload folder [-h] -c CONTAINER_NAME -a ACCOUNT_NAME\n                          [-v {debug,info,warning,error,critical}] [-r RESET_PATH]\n                          [-s {Hot,Cool,Archive}] -f FOLDER\n\nUpload a folder to Azure storage\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -c CONTAINER_NAME, --container_name CONTAINER_NAME\n                         Name of the Azure storage container. Note that container names must be lowercase, between 3 and 63 characters, start with a letter or number, and can contain only letters, numbers, and the dash (-) character. Consecutive dashes are not permitted.\n  -a ACCOUNT_NAME, --account_name ACCOUNT_NAME\n                        Name of the Azure storage account\n  -v {debug,info,warning,error,critical}, --verbosity {debug,info,warning,error,critical}\n                        Set the logging level. Default is info.\n  -r RESET_PATH, --reset_path RESET_PATH\n                        Set the path of the file/folder within a folder in the target container e.g. sequence_data/220202-m05722. If you want to place it directly in the container without any nesting, use   or ''\n  -s {Hot,Cool,Archive}, --storage_tier {Hot,Cool,Archive}\n                        Set the storage tier for the file/folder to be uploaded. Options are  Hot ,  Cool , and  Archive . Default is Hot\n  -f FOLDER, --folder FOLDER\n                        Name and path of the folder to upload to Azure storage.e.g. /mnt/sequences/220202_M05722/", 
            "title": "AzureUpload"
        }
    ]
}