# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Create the orb for the code coverage upload
orbs:
  codecov: codecov/codecov@4.1.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  azure-storage:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: continuumio/miniconda3
    environment:
      PYTHON_VERSION: 3.12.3
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Setup Environment and Run Tests
          command: |
            # Install curl and gnupg
            apt-get update && apt-get install -y curl gnupg
            # Add necessary channels for conda
            conda config --add channels olcbioinformatics
            conda config --add channels bioconda
            conda config --add channels conda-forge
            # Set conda configuration options
            conda config --set always_yes yes --set changeps1 no
            # Install mamba
            conda install mamba -c conda-forge
            # Create a new conda environment with a specific version of Python
            mamba create -n azure_storage python=${PYTHON_VERSION}
            # Activate the environment
            source activate azure_storage
            # Install necessary packages
            mamba install azure-core=1.30.1=pyhd8ed1ab_0 azure-storage-blob=12.20.0=pyhd8ed1ab_0 coloredlogs=15.0.1=pyhd8ed1ab_3 mkdocs=1.6.0=pyhd8ed1ab_0 pandas=2.2.2=py312h1d6d2e6_1 python=3.12.3=hab00c5b_0_cpython pytest=8.2.1=pyhd8ed1ab_0 pytest-cov=5.0.0=pyhd8ed1ab_0 termcolor=2.4.0=pyhd8ed1ab_0
            # Install the current project (in editable mode) using pip
            pip install -e .
            # Create a directory without write permissions
            mkdir /invalid
            chmod -R 000 /invalid
            python -m pytest tests/ --cov=azure_storage --cov-config=.coveragec --cov-report=xml:test_reports/azure_storage.xml
      - run:
          name: Check Test Reports
          command: |
            if [ ! -f /root/project/test_reports/azure_storage.xml ]; then
              echo "Test reports not found!"
              exit 1
            fi
      # Store the test reports as artifacts
      - store_artifacts:
          path: test_reports/
          destination: circleci-docs
      # Upload the coverage report to codecov
      - codecov/upload:
          file: /root/project/test_reports/azure_storage.xml
workflows:
    build_and_test:
        jobs:
          - azure-storage:
              filters:
                branches:
                  ignore: gh-pages
